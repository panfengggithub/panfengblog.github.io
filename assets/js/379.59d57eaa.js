(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{793:function(l,e,t){"use strict";t.r(e);var a=t(1),s=Object(a.a)({},(function(){var l=this,e=l._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("h2",{attrs:{id:"sentinel规则持久化拉模式实战及其源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sentinel规则持久化拉模式实战及其源码分析"}},[l._v("#")]),l._v(" Sentinel规则持久化拉模式实战及其源码分析")]),l._v(" "),e("p",[l._v("课程内容：")]),l._v(" "),e("ol",[e("li",[l._v("Sentinel规则持久化三种模式分析")]),l._v(" "),e("li",[l._v("控制台是如何推送规则到客户端内存中的")]),l._v(" "),e("li",[l._v("原始模式下规则推送的源码分析")]),l._v(" "),e("li",[l._v("Sentinel规则持久化扩展点分析")]),l._v(" "),e("li",[l._v("动态规则扩展之读写数据源的实现")]),l._v(" "),e("li",[l._v("客户端拉模式规则持久化实战")]),l._v(" "),e("li",[l._v("拉模式改造之如何整合Spring Cloud")])]),l._v(" "),e("h3",{attrs:{id:"以流控规则为例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以流控规则为例"}},[l._v("#")]),l._v(" 以流控规则为例")]),l._v(" "),e("p",[l._v("校验slot:   FlowSlot")]),l._v(" "),e("p",[e("strong",[l._v("规则实体： FlowRule")])]),l._v(" "),e("p",[l._v("缓存规则： FlowRuleManager.getFlowRuleMap()")]),l._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[l._v("Map<String, List<FlowRule>> flowRules = new HashMap<>()\n")])]),l._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[l._v("1")]),e("br")])]),e("p",[l._v("加载规则： FlowRuleManager.loadRules(rules)")]),l._v(" "),e("h3",{attrs:{id:"控制台是如何推送规则到客户端内存中的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制台是如何推送规则到客户端内存中的"}},[l._v("#")]),l._v(" 控制台是如何推送规则到客户端内存中的")]),l._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[l._v("FlowControllerV1： /v1/flow/rule\n")])]),l._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[l._v("1")]),e("br")])]),e("p",[e("strong",[l._v("规则实体： FlowRuleEntity")])]),l._v(" "),e("p",[l._v("缓存规则： 基于内存模式  allRules   machineRules  appRules")]),l._v(" "),e("p",[l._v("接口： RuleRepository       规则持久化的扩展点（考虑）")]),l._v(" "),e("p",[l._v("发布缓存： 推送到微服务端内存中")]),l._v(" "),e("ul",[e("li",[l._v("重要：  FlowRuleEntity ——》FlowRule")]),l._v(" "),e("li",[l._v("发起请求：  http://192.168.3.1:8720/setRules")])]),l._v(" "),e("p",[l._v("微服务端：")]),l._v(" "),e("p",[l._v("ModifyRulesCommandHandler#handle")]),l._v(" "),e("p",[l._v("加载规则: FlowRuleManager.loadRules(flowRules)")]),l._v(" "),e("p",[l._v("接口： WritableDataSource    规则持久化的扩展点")]),l._v(" "),e("h3",{attrs:{id:"拉模式改造之如何整合spring-cloud"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉模式改造之如何整合spring-cloud"}},[l._v("#")]),l._v(" 拉模式改造之如何整合Spring Cloud")]),l._v(" "),e("p",[l._v("扩展点：")]),l._v(" "),e("p",[l._v("spi")]),l._v(" "),e("p",[l._v("spring:")]),l._v(" "),e("ul",[e("li",[l._v("beanPostProcessor  beanFactoryPostProcessor")]),l._v(" "),e("li",[l._v("SmartInitializingSingleton")]),l._v(" "),e("li",[l._v("ApplicationListener")]),l._v(" "),e("li",[l._v("FactoryBean     getObject")])]),l._v(" "),e("p",[l._v("springboot")]),l._v(" "),e("ul",[e("li",[l._v("ApplicationRunner")])])])}),[],!1,null,null,null);e.default=s.exports}}]);