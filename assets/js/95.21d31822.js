(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{511:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"带你探索jvm底层之类加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#带你探索jvm底层之类加载"}},[s._v("#")]),s._v(" "),t("strong",[s._v("带你探索JVM底层之类加载")])]),s._v(" "),t("p",[s._v("类加载器子系统分两节课讲解：类加载、类加载器")]),s._v(" "),t("p",[s._v("本节课深入讲解类加载，分四PA来讲。")]),s._v(" "),t("p",[t("strong",[s._v("课堂上会有操作实战")])]),s._v(" "),t("h2",{attrs:{id:"klass模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#klass模型"}},[s._v("#")]),s._v(" klass模型")]),s._v(" "),t("p",[s._v("Java的每个类，在JVM中，都有一个对应的Klass类实例与之对应，存储类的元信息如：常量池、属性信息、方法信息……")]),s._v(" "),t("p",[s._v("看下klass模型类的继承结构")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/2179815/1596173104706-a25dfc25-bbe2-446f-82f1-90372f73179d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_19%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),t("p",[s._v("从继承关系上也能看出来，类的元信息是存储在原空间的")]),s._v(" "),t("p",[s._v("普通的Java类在JVM中对应的是instanceKlass类的实例，再来说下它的三个字类")]),s._v(" "),t("ol",[t("li",[s._v("InstanceMirrorKlass：用于表示java.lang.Class，Java代码中获取到的Class对象，实际上就是这个C++类的实例，存储在堆区，学名镜像类")]),s._v(" "),t("li",[s._v("InstanceRefKlass：用于表示java/lang/ref/Reference类的子类")]),s._v(" "),t("li",[s._v("InstanceClassLoaderKlass：用于遍历某个加载器加载的类")])]),s._v(" "),t("p",[s._v("Java中的数组不是静态数据类型，是动态数据类型，即是运行期生成的，Java数组的元信息用ArrayKlass的子类来表示：")]),s._v(" "),t("ol",[t("li",[s._v("TypeArrayKlass：用于表示基本类型的数组")]),s._v(" "),t("li",[s._v("ObjArrayKlass：用于表示引用类型的数组")])]),s._v(" "),t("h2",{attrs:{id:"类加载的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载的过程"}},[s._v("#")]),s._v(" 类加载的过程")]),s._v(" "),t("p",[s._v("类加载由7个步骤完成，看图（这样说不准确，改了下）")]),s._v(" "),t("p",[s._v("类的生命周期是由7个阶段组成，但是类的加载说的是前5个阶段")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/2179815/1596174379864-42689336-ec0c-487d-859c-28dec30f0721.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),t("h3",{attrs:{id:"加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加载"}},[s._v("#")]),s._v(" 加载")]),s._v(" "),t("p",[s._v("1、通过类的全限定名获取存储该类的class文件（没有指明必须从哪获取）")]),s._v(" "),t("p",[s._v("2、解析成运行时数据，即instanceKlass实例，存放在方法区")]),s._v(" "),t("p",[s._v("3、在堆区生成该类的Class对象，即instanceMirrorKlass实例")]),s._v(" "),t("p",[s._v("程序随便你怎么写，随便你用什么语言，只要能达到这个效果即可")]),s._v(" "),t("p",[s._v("就是说你可以改写openjdk源码，你写的程序能达到这三个效果即可")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("何时加载")]),s._v(" "),t("p",[s._v("主动使用时")]),s._v(" "),t("p",[s._v("1、new、getstatic、putstatic、invokestatic")]),s._v(" "),t("p",[s._v("2、反射")]),s._v(" "),t("p",[s._v("3、初始化一个类的子类会去加载其父类")]),s._v(" "),t("p",[s._v("4、启动类（main函数所在类）")]),s._v(" "),t("p",[s._v("5、当使用jdk1.7动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解析结果REF_getstatic,REF_putstatic,REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行初始化，则需要先出触发其初始化")]),s._v(" "),t("p",[s._v("预加载：包装类、String、Thread")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("因为没有指明必须从哪获取class文件，脑洞大开的工程师们开发了这些")]),s._v(" "),t("p",[s._v("1、从压缩包中读取，如jar、war")]),s._v(" "),t("p",[s._v("2、从网络中获取，如Web Applet")]),s._v(" "),t("p",[s._v("3、动态生成，如动态代理、CGLIB")]),s._v(" "),t("p",[s._v("4、由其他文件生成，如JSP")]),s._v(" "),t("p",[s._v("5、从数据库读取")]),s._v(" "),t("p",[s._v("6、从加密文件中读取")]),s._v(" "),t("h3",{attrs:{id:"验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[s._v("#")]),s._v(" 验证")]),s._v(" "),t("p",[s._v("1、文件格式验证")]),s._v(" "),t("p",[s._v("2、元数据验证")]),s._v(" "),t("p",[s._v("3、字节码验证")]),s._v(" "),t("p",[s._v("4、符号引用验证")]),s._v(" "),t("h3",{attrs:{id:"准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),t("p",[s._v("为静态变量分配内存、赋初值")]),s._v(" "),t("p",[s._v("实例变量是在创建对象的时候完成赋值的，没有赋初值一说")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/2179815/1596174636413-c890999d-28ba-4d20-a5d5-c95eaf263d04.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),t("p",[s._v("如果被final修饰，在编译的时候会给属性添加ConstantValue属性，准备阶段直接完成赋值，即没有赋初值这一步")]),s._v(" "),t("h3",{attrs:{id:"解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[s._v("#")]),s._v(" 解析")]),s._v(" "),t("p",[s._v("将常量池中的符号引用转为直接引用")]),s._v(" "),t("p",[s._v("解析后的信息存储在ConstantPoolCache类实例中")]),s._v(" "),t("p",[s._v("1、类或接口的解析")]),s._v(" "),t("p",[s._v("2、字段解析")]),s._v(" "),t("p",[s._v("3、方法解析")]),s._v(" "),t("p",[s._v("4、接口方法解析")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("何时解析")]),s._v(" "),t("p",[s._v("思路：")]),s._v(" "),t("p",[s._v("1、加载阶段解析常量池时")]),s._v(" "),t("p",[s._v("2、用的时候")]),s._v(" "),t("p",[s._v("openjdk是第二种思路，在执行特定的字节码指令之前进行解析：")]),s._v(" "),t("p",[s._v("anewarray、checkcast、getfield、getstatic、instanceof、invokedynamic、invokeinterface、invokespecial、invokestatic、invokevirtual、ldc、ldc_w、ldc2_w、multianewarray、new、putfield")]),s._v(" "),t("h3",{attrs:{id:"初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),t("p",[s._v("执行静态代码块，完成静态变量的赋值")]),s._v(" "),t("p",[s._v("静态字段、静态代码段，字节码层面会生成clinit方法")]),s._v(" "),t("p",[s._v("方法中语句的先后顺序与代码的编写顺序相关")]),s._v(" "),t("h2",{attrs:{id:"类加载细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载细节"}},[s._v("#")]),s._v(" 类加载细节")]),s._v(" "),t("p",[t("strong",[s._v("见课堂上操作实战")])]),s._v(" "),t("h2",{attrs:{id:"读取静态字段的实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读取静态字段的实现原理"}},[s._v("#")]),s._v(" 读取静态字段的实现原理")]),s._v(" "),t("p",[t("strong",[s._v("见课堂上操作实战")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test_1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test_1_B")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test_1_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A str"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A Static Block"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test_1_B")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test_1_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B Static Block"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[t("strong",[s._v("静态字段如何存储")])]),s._v(" "),t("p",[s._v("instanceKlass")]),s._v(" "),t("p",[s._v("instanceMirrorKlass")]),s._v(" "),t("p",[s._v("Test_1_A的")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/2179815/1598700218961-7e1cdc09-8acd-4271-8cb7-ef0486cbd38d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),t("p",[s._v("静态变量str的值存放在StringTable中，镜像类中存放的是字符串的指针")]),s._v(" "),t("p",[s._v("Test_1_B")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/2179815/1598700243438-7683a483-788e-4d5c-acc1-009795f1c31f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),t("p",[s._v("str是类Test_1_A的静态属性，可以看到不会存储到子类Test_1_B的镜像类中")]),s._v(" "),t("p",[s._v("可以猜得到，通过子类Test_1_B访问父类Test_1_A的静态字段有两种实现方式：")]),s._v(" "),t("p",[s._v("1、先去Test_1_B的镜像类中去取，如果有直接返回；如果没有，会沿着继承链将请求往上抛。很明显，这种算法的性能随继承链的death而上升，算法复杂度为O(n)")]),s._v(" "),t("p",[s._v("2、借助另外的数据结构实现，使用K-V的格式存储，查询性能为O(1)")]),s._v(" "),t("p",[s._v("Hotspot就是使用的第二种方式，借助另外的数据结构ConstantPoolCache，常量池类ConstantPool中有个属性_cache指向了这个结构。每一条数据对应一个类ConstantPoolCacheEntry。")]),s._v(" "),t("p",[s._v("ConstantPoolCacheEntry在哪呢？在ConstantPoolCache对象后面，看代码")]),s._v(" "),t("p",[s._v("\\openjdk\\hotspot\\src\\share\\vm\\oops\\cpCache.hpp")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConstantPoolCacheEntry")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("base")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConstantPoolCacheEntry")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("address"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("in_bytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("base_offset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("这个公式的意思是ConstantPoolCache对象的地址加上ConstantPoolCache对象的内存大小")]),s._v(" "),t("p",[t("strong",[s._v("ConstantPoolCache")])]),s._v(" "),t("p",[s._v("常量池缓存是为常量池预留的运行时数据结构。保存所有字段访问和调用字节码的解释器运行时信息。缓存是在类被积极使用之前创建和初始化的。每个缓存项在解析时被填充")]),s._v(" "),t("p",[t("strong",[s._v("如何读取")])]),s._v(" "),t("p",[s._v("\\openjdk\\hotspot\\src\\share\\vm\\interpreter\\bytecodeInterpreter.cpp")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_getstatic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          u2 index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ConstantPoolCacheEntry")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          index "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bytes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get_native_u2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// QQQ Need to make this as inlined as possible. Probably need to")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// split all the bytecode cases out so c++ compiler has a chance")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// for constant prop to fold everything possible away.")]),s._v("\n\n          cache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entry_at")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("cache"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("is_resolved")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bytecodes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("opcode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("CALL_VM")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterpreterRuntime")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve_get_put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("THREAD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Bytecodes")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Code")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("opcode"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                    handle_exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            cache "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cp"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("entry_at")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n……\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("从代码中可以看出，是直接去获取ConstantPoolCacheEntry")]),s._v(" "),t("h2",{attrs:{id:"练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[s._v("#")]),s._v(" 练习")]),s._v(" "),t("p",[s._v("1、搭建Ubuntu+openjdk8环境")]),s._v(" "),t("p",[s._v("2、课堂上的代码自己实践一下，写成文章")])])}),[],!1,null,null,null);t.default=e.exports}}]);