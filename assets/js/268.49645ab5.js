(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{682:function(e,_,t){"use strict";t.r(_);var v=t(1),a=Object(v.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"电商微服务架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#电商微服务架构"}},[e._v("#")]),e._v(" "),_("strong",[e._v("电商微服务架构")])]),e._v(" "),_("h1",{attrs:{id:"_1-架构的演进"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-架构的演进"}},[e._v("#")]),e._v(" 1.架构的演进")]),e._v(" "),_("h2",{attrs:{id:"_1-1-单体架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单体架构"}},[e._v("#")]),e._v(" 1.1 单体架构")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620117746-d2662ca7-9c72-4f33-8cb1-6134e4c794d7.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_25%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("优点：")]),e._v(" "),_("p",[e._v("1.应用开发简单")]),e._v(" "),_("p",[e._v("2.易于对应用程序进行大规模的更改")]),e._v(" "),_("p",[e._v("3.测试相对简单直观")]),e._v(" "),_("p",[e._v("4.部署简单明了")]),e._v(" "),_("p",[e._v("缺点：")]),e._v(" "),_("p",[e._v("1.业务越来越复杂，单体架构扩展性不足，业务扩展带来的代价越来越大；")]),e._v(" "),_("p",[e._v("2.用户越来越多，程序承受的并发越爱越高，单体应用的并发能力有限；")]),e._v(" "),_("p",[e._v("3.单体应用的业务都在同一个程序中，增删改业务修改，也会影响其他代码，给测试增加了难度")]),e._v(" "),_("ol",[_("li",[e._v("扩展伸缩能力差")])]),e._v(" "),_("h2",{attrs:{id:"_1-2-微服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-微服务"}},[e._v("#")]),e._v(" 1.2 微服务")]),e._v(" "),_("p",[e._v("Martin Flowers 微服务经典文章")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013633-9535b991-9964-43bb-b489-1ebff9471db0.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_10%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("https://martinfowler.com/articles/microservices.html")]),e._v(" "),_("h3",{attrs:{id:"_1-2-1-什么是微服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-什么是微服务"}},[e._v("#")]),e._v(" 1.2.1 什么是微服务")]),e._v(" "),_("p",[e._v("微服务是一种开发软件的架构和组织方法，其中软件由通过明确定义的 API 进行通信的小型独立服务组成。这些服务由各个小型独立团队负责。微服务架构使应用程序更易于扩展和更快地开发，从而加速创新并缩短新功能的上市时间。")]),e._v(" "),_("h3",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])]),e._v(" "),_("h3",{attrs:{id:"_1-2-2-整体式架构与微服务架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-整体式架构与微服务架构"}},[e._v("#")]),e._v(" 1.2.2 整体式架构与微服务架构")]),e._v(" "),_("p",[e._v("通过整体式架构，所有进程紧密耦合，并可作为单项服务运行。这意味着，如果应用程序的一个进程遇到需求峰值，则必须扩展整个架构。随着代码库的增长，添加或改进整体式应用程序的功能变得更加复杂。这种复杂性限制了试验的可行性，并使实施新概念变得困难。整体式架构增加了应用程序可用性的风险，因为许多依赖且紧密耦合的进程会扩大单个进程故障的影响。")]),e._v(" "),_("p",[e._v("使用微服务架构，将应用程序构建为独立的组件，并将每个应用程序进程作为一项服务运行。这些服务使用轻量级 API 通过明确定义的接口进行通信。这些服务是围绕业务功能构建的，每项服务执行一项功能。由于它们是独立运行的，因此可以针对各项服务进行更新、部署和扩展，以满足对应用程序特定功能的需求。")]),e._v(" "),_("h3",{attrs:{id:"_1-2-3-微服务的特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-微服务的特性"}},[e._v("#")]),e._v(" 1.2.3 微服务的特性")]),e._v(" "),_("p",[e._v("自主性")]),e._v(" "),_("h3",{attrs:{id:"-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[e._v("#")]),e._v(" "),_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013674-acb72959-ba4b-40d3-bf96-19e176d7a17c.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_10%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("可以对微服务架构中的每个组件服务进行开发、部署、运营和扩展，而不影响其他服务的功能。这些服务不需要与其他服务共享任何代码或实施。各个组件之间的任何通信都是通过明确定义的 API 进行的。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013732-68b19bf9-a639-46d5-a091-2daf0b873bcf.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("专用性")]),e._v(" "),_("p",[e._v("每项服务都是针对一组功能而设计的，并专注于解决特定的问题。如果开发人员逐渐将更多代码增加到一项服务中并且这项服务变得复杂，那么可以将其拆分成多项更小的服务。")]),e._v(" "),_("h3",{attrs:{id:"_1-2-4-微服务的优势"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-微服务的优势"}},[e._v("#")]),e._v(" 1.2.4 微服务的优势")]),e._v(" "),_("p",[_("strong",[e._v("敏捷性")])]),e._v(" "),_("p",[e._v("微服务促进若干小型独立团队形成一个组织，这些团队负责自己的服务。各团队在小型且易于理解的环境中行事，并且可以更独立、更快速地工作。这缩短了开发周期时间。您可以从组织的总吞吐量中显著获益。")]),e._v(" "),_("p",[_("strong",[e._v("灵活扩展")])]),e._v(" "),_("p",[e._v("通过微服务，您可以独立扩展各项服务以满足其支持的应用程序功能的需求。这使团队能够适当调整基础设施需求，准确衡量功能成本，并在服务需求激增时保持可用性。")]),e._v(" "),_("p",[_("strong",[e._v("轻松部署")])]),e._v(" "),_("p",[e._v("微服务支持持续集成和持续交付，可以轻松尝试新想法，并可以在无法正常运行时回滚。由于故障成本较低，因此可以大胆试验，更轻松地更新代码，并缩短新功能的上市时间。")]),e._v(" "),_("p",[_("strong",[e._v("技术自由")])]),e._v(" "),_("p",[e._v("微服务架构不遵循“一刀切”的方法。团队可以自由选择最佳工具来解决他们的具体问题。因此，构建微服务的团队可以为每项作业选择最佳工具。")]),e._v(" "),_("p",[_("strong",[e._v("可重复使用的代码")])]),e._v(" "),_("p",[e._v("将软件划分为小型且明确定义的模块，让团队可以将功能用于多种目的。专为某项功能编写的服务可以用作另一项功能的构建块。这样应用程序就可以自行引导，因为开发人员可以创建新功能，而无需从头开始编写代码。")]),e._v(" "),_("p",[_("strong",[e._v("弹性")])]),e._v(" "),_("p",[e._v("服务独立性增加了应用程序应对故障的弹性。在整体式架构中，如果一个组件出现故障，可能导致整个应用程序无法运行。通过微服务，应用程序可以通过降低功能而不导致整个应用程序崩溃来处理总体服务故障。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013744-d1e8bbc5-7934-4c8f-871c-6aa467328ca4.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_27%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-2-5-微服务的劣势"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-微服务的劣势"}},[e._v("#")]),e._v(" 1.2.5 微服务的劣势")]),e._v(" "),_("p",[e._v("分发：分布式系统更难编程，因为远程调用速度慢，并且总是有失败的风险。")]),e._v(" "),_("p",[e._v("最终一致性：对于分布式系统来说，维护强大的一致性是极其困难的，这意味着每个人都必须管理最终一致性。")]),e._v(" "),_("p",[e._v("操作复杂性：您需要一个成熟的操作团队来管理大量的服务，这些服务正在定期重新部署。")]),e._v(" "),_("h2",{attrs:{id:"_1-3-微服务划分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-微服务划分"}},[e._v("#")]),e._v(" 1.3 微服务划分")]),e._v(" "),_("p",[e._v("如何将单体服务拆分微服务？什么时候拆分？拆成什么？")]),e._v(" "),_("p",[e._v("https://martinfowler.com/articles/break-monolith-into-microservices.html")]),e._v(" "),_("h3",{attrs:{id:"_1-3-1-从边缘服务开始拆分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-从边缘服务开始拆分"}},[e._v("#")]),e._v(" 1.3.1 从边缘服务开始拆分")]),e._v(" "),_("p",[e._v("比如把认证服务进行拆分")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013703-8666c192-29c4-4b15-b30a-a22f7a8a7c1d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-2-减少对老系统的依赖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-减少对老系统的依赖"}},[e._v("#")]),e._v(" 1.3.2  减少对老系统的依赖")]),e._v(" "),_("p",[e._v("将新的微服务系统与老系统之间的依赖关系最小化是一个基本原则。微服务的一个主要优点是具有快速和独立的发布周期。一旦与老系统之间有任何依赖，如数据、逻辑或API，都将导致微服务系统与老系统的发布周期相耦合，从而使得微服务的发布优势不复存在。通常，摆脱老系统的主要动机就是其成本之高昂，以及深锁于其中的业务功能的更新之缓慢。所以，我们希望逐步通过减少对老系统的依赖关系的方式，将核心业务解耦。如果团队能够遵循这些原则，将业务功能写进自己的服务中，依赖关系就能从对单体系统的依赖转变为对微服务的依赖。这是一个理想的依赖方向，因为它将不会拖慢新服务的更新速度。")]),e._v(" "),_("p",[e._v("如果新服务最终依然还是调用到了老系统，我建议在老系统中开发新的API，并通过新服务的访问层来访问这些API，以确保老系统中的业务逻辑不会直接暴露出来。就算老系统的内部可能实现并不是这样的，也应该致力于定义一个能够反应领域的明确概念和其结构的API。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013693-86214ae1-d3c7-4549-98d2-42c45bc35a03.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_24%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-3-解耦粘性功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-解耦粘性功能"}},[e._v("#")]),e._v(" 1.3.3  解耦粘性功能")]),e._v(" "),_("p",[e._v("往往是因为在整体架构中的某个功能模块的设计上存在问题，没有被很好地定义为领域概念，导致系统中大量的功能都依赖于它。为了能够将解耦进行下去，开发人员需要识别出这些“粘性功能(Sticky Capabilities)”，将其解构为拥有良好定义的领域概念，并将这些领域概念转化为单独的服务。")]),e._v(" "),_("p",[e._v("比如在一个网站的单体系统中，会话（Session）是最常见的耦合因素之一。在在线零售系统的示例中，Session中通常存放着许多东西，从跨越了多个域边界的用户偏好（比如物流和支付的偏好设置）到用户的意图和用户交互（比如最近访问的页面，浏览过的产品和愿望清单）。如果我们不进行解耦、重构当前的会话概念，我们将很难解耦剩下的更多功能，因为它们通过四处弥漫着的Session与老系统紧紧地耦合在了一起。 同时，我也不鼓励在整体框架之外另外创建一个“会话”服务，因为它只会导致类似的强耦合。相比之下，目前这种耦合关系仅存在于整体的业务流程之中，更糟糕的是，让它散布到业务流程之外乃至整个网络中。")]),e._v(" "),_("p",[e._v("我们可以逐步地从粘性功能中将微服务提取出来，即一次只提供一个服务。找到最多的耦合概念并将其解耦重构为具体的领域服务")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013742-21823686-7df9-4651-9a60-d5ce56dd1166.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_27%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-4-垂直解耦并且提前释放数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-垂直解耦并且提前释放数据"}},[e._v("#")]),e._v(" 1.3.4 垂直解耦并且提前释放数据")]),e._v(" "),_("p",[e._v("垂直地分离各个业务功能，连业务逻辑带数据一起进行解耦，并且各个前端应用的调用重定向到新的API上.")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013669-4b6a3d57-ca04-4329-8ef1-7acf36b862d9.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_31%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-5-解耦重要而易变的业务功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-解耦重要而易变的业务功能"}},[e._v("#")]),e._v(" 1.3.5 解耦重要而易变的业务功能")]),e._v(" "),_("p",[e._v("从单体系统中将业务功能解耦出来是一件很难的事情。我听说，Neal Ford将其比作“一台小心翼翼的器官手术”。从在线零售系统中提取业务功能时，需要仔细地将业务逻辑、数据、UI组件提取出来并将它们重定向到新服务。因为其所需的工作量不是一点两点，所以开发者们需要不断地评估进行解耦的成本与其能够带来的好处，比如，是想要追求更快的开发速度，还是要追求规模上的成长。举个例子，如果交付团队的目标是想在修改单体系统中的现有业务功能时耗时更少，那么他们必须找到修改最耗时的业务功能并将其分离。把代码中不断发生变化的部分单独分离出来，可以最快速地产出价值。交付团队还可以通过对代码的提交记录做分析，找到那些变化得最多的部分，并将其与产品路线图、产品组合一起分析，以确定在将来最期望的功能，并将其分离出来。他们需要与业务经理、产品经理一起交谈，以了解对他们而言真正重要的差异化能力。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013668-ee9eb77c-269a-4ad8-b37e-f404f6b31301.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-6-解耦业务功能-不是解耦业务代码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6-解耦业务功能-不是解耦业务代码"}},[e._v("#")]),e._v(" 1.3.6 解耦业务功能，不是解耦业务代码")]),e._v(" "),_("p",[_("strong",[e._v("解耦服务时到底是重写还是重用？")])]),e._v(" "),_("p",[e._v("无论何时，只要开发人员想要从系统中解耦一项服务出来，他们都有两种可行的办法：提取代码，或是直接重写。一般来说，服务的提取，或是单体系统的解构都默认被设想为是通过重用现有的实现方案并将其提取到单独的服务中来实现。其中的部分原因是因为，我们对我们所亲自设计和编写的出来的代码有着认知偏好。")]),e._v(" "),_("p",[e._v("比如说，在零售系统中，“定价和促销”功能是一段相当复杂的高难度代码，它可以动态地配置和应用促销规则，并且根据各种参数（例如客户行为，忠诚度，产品捆绑等）提供折扣和优惠。像“定价和促销”这样的业务功能，就是进行“重用及提取”的完美选择。而相比之下，“客户信息”就是一个很简单的CRUD功能点，主要也就包括序列化、数据存储以及相关配置之类的一些模板功能，因此，它是进行“重写和淘汰”的理想对象。")]),e._v(" "),_("p",[e._v("待解耦的业务功能与清晰的领域概念相一致，并且逻辑精巧复杂，否则我强烈建议进行重写，并淘汰老代码。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013710-01116792-a25d-4cda-a4d8-efb36b964c47.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_26%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-7-先宏观再微观"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7-先宏观再微观"}},[e._v("#")]),e._v(" 1.3.7 先宏观再微观")]),e._v(" "),_("p",[e._v("从遗留单体系统中寻找领域边界，既是一门艺术，又是一门科学。而作为一个具有普适性的规则，利用领域驱动设计的概念来寻找“上下文边界”来定义微服务的边界是一个很好的开始。我承认，我经常看到一些单体系统的解耦在粒度上“矫枉过正”，将一个过大的系统切分为了过小的服务，而这些过小的服务常常是从现有数据的视角上出发的。而这种的微服务识别方法，几乎总是会导致大量与资源的CURD直接相关的贫血服务的“寒武纪生物大爆发”。对于新的微服务架构来说，这将创建一个高度摩擦的环境，并且最终无法独立发布测试，也无法提供服务。这种方式创建了一个难以调试的分布式系统，一个跨越事务边界的分布式系统，因此很难保持一致，这一切对于运维来说，太复杂了。尽管存在一些关于微服务粒度的“启发方法”，诸如团队大小，重写服务的时间，必须包括多少行为等等，我的建议是，微服务的规模将取决于运维团队可以独立发布、监控和运营的服务数量。首先，围绕领域概念构建一个大型服务，待团队的微服务运维能力提升之后再将其分解为多个小服务。")]),e._v(" "),_("p",[e._v("例如，在解耦零售系统的过程中，开发者可以从“购买”服务开始解耦。“购买”服务内封装了“购物袋”的功能，还封装了购买一个真正的购物袋的功能，即“结账”。而随着他们组建团队并发布更多服务的能力不断增强，他们可以将“购物袋”功能从“结账”中解耦出来，成为一个单独的服务.")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013663-c77772de-4ccb-4bad-869d-8acdc50e5b02.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_17%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_1-3-8-原子性地按步迁移"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-8-原子性地按步迁移"}},[e._v("#")]),e._v(" 1.3.8 原子性地按步迁移")]),e._v(" "),_("p",[e._v("每一次的架构演进，都应该是原子性的——无论是一个小步骤还是一个大飞跃，要么完成，要么回滚。这是非常重要的，因为我们正在采取迭代和渐进的方法来改进整体架构和进行服务解耦。就完成架构目标而言，每个改变都必须让我们处于更好的位置。使用“演进架构”的适应度函数进行隐喻的话，演进的每个原子步骤之后的架构适应度函数都应该对架构的目标产生更高价值。")]),e._v(" "),_("p",[e._v("单体系统解构的原子单元包括：")]),e._v(" "),_("p",[e._v("解耦新服务")]),e._v(" "),_("p",[e._v("将调用方重定向至新服务")]),e._v(" "),_("p",[e._v("从单体系统中删除老代码")]),e._v(" "),_("p",[e._v("反模式：解耦新服务给新的调用方调用，但是却不淘汰旧服务")]),e._v(" "),_("p",[e._v("让我举一个例子来说明这一点。 想象一下，微服务架构的目标是提高开发人员的修改系统以提供价值的速度。团队决定将最终用户身份验证解耦为一个基于OAuth 2.0协议的单独服务。此服务旨在替代现有老架构中的用户身份验证系统，并以微服务的新体系结构来进行身份验证。 我们将这种增量改变称为“导入鉴权服务”。导入这项新服务的一种方法是：")]),e._v(" "),_("p",[e._v("（1）构建鉴权服务，实现OAuth 2.0协议。")]),e._v(" "),_("p",[e._v("（2）在老系统后端添加一个新的认证路径，以调用鉴权服务来认证最终用户。")]),e._v(" "),_("p",[e._v("如果团队至此而止，转而去开发一些其他服务或功能的话，他们会将整体架构置于熵增状态。因为在此状态下，有两种实现用户身份验证的方式，即新的OAuth 2.0路径和旧客户端的基于密码/会话的路径。在这一点上，团队实际上远离了实现更快更改的总体目标。对于新来的老系统开发人员来说，现在需要处理两条代码路径了。这实际上增加了熟悉代码的工作量，还导致更改和测试代码的过程变得更慢了。")]),e._v(" "),_("p",[e._v("相反，团队可以在我们的原子演进单元中包含以下步骤：")]),e._v(" "),_("p",[e._v("（3）将旧客户端的基于密码/会话的身份验证替换为OAuth 2.0路径")]),e._v(" "),_("p",[e._v("（4）从老系统中删除旧的验证路径")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013826-51d2d01b-f5a9-491d-9159-f40a875567ac.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("ol",[_("li",[e._v("鲁班电商微服务架构")])]),e._v(" "),_("p",[_("strong",[e._v("单体架构：")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013756-bc756930-054f-493b-9c86-aeb0741a9adc.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_33%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[_("strong",[e._v("分布式架构：")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013801-b9e00c62-2cbd-422d-a4e4-83893a6bcf80.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_36%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("ol",[_("li",[e._v("认证中心服务搭建详解")])]),e._v(" "),_("p",[e._v("Oauth2+JWT搭建认证中心(防篡改)")]),e._v(" "),_("h2",{attrs:{id:"_3-1-jwt结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-jwt结构"}},[e._v("#")]),e._v(" 3.1  JWT结构")]),e._v(" "),_("p",[e._v("官方文档 ： https://jwt.io/introduction/")]),e._v(" "),_("p",[e._v("JWT是由三段信息构成的，将这三段信息文本用"),_("code",[e._v(".")]),e._v("链接一起就构成了Jwt字符串。就像这样:")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013865-19a47df1-21ce-4253-a90c-43a426bee645.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("eyJhbGciOiJIUzUxMiJ9.eyJzY2hvb2wiOiJsdWJhbiIsIm5hbWUiOiJib2xlIiwiZXhwIjoxNTkyODA2ODA2LCJpYXQiOjE1OTI3NDY4MDZ9.565mhMJXWOuUEIYYiYxnwrk7BSiR-XMGxd5Ydnp5Ng6nYBrt0D21ChsQFS3HAjkAfBPMhWxdedq2uc5Qhys1aA")]),e._v(" "),_("p",[_("strong",[e._v("JWT的构****成")])]),e._v(" "),_("p",[e._v("第一部分我们称它为头部（header),第二部分我们称其为载荷（payload, 类似于飞机上承载的物品)，第三部分是签证（signature).")]),e._v(" "),_("p",[e._v("header")]),e._v(" "),_("p",[e._v("jwt的头部承载两部分信息：")]),e._v(" "),_("ul",[_("li",[e._v("声明类型，这里是jwt")]),e._v(" "),_("li",[e._v("声明加密的算法 通常直接使用 HMAC SHA256")])]),e._v(" "),_("p",[e._v("完整的头部就像下面这样的JSON：")]),e._v(" "),_("p",[e._v("{")]),e._v(" "),_("p",[e._v("'typ': 'JWT',")]),e._v(" "),_("p",[e._v("'alg': 'HS256'")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("然后将头部进行base64加密（该加密是可以对称解密的),构成了第一部分.")]),e._v(" "),_("p",[e._v("eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9")]),e._v(" "),_("p",[_("strong",[e._v("playload")])]),e._v(" "),_("p",[e._v("载荷就是存放有效信息的地方。这个名字像是特指飞机上承载的货品，这些有效信息包含三个部分")]),e._v(" "),_("ul",[_("li",[e._v("标准中注册的声明")]),e._v(" "),_("li",[e._v("公共的声明")]),e._v(" "),_("li",[e._v("私有的声明")])]),e._v(" "),_("p",[_("strong",[e._v("标准中注册的声明")]),e._v(" (建议但不强制使用) ：")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("iss")]),e._v(": jwt签发者")]),e._v(" "),_("li",[_("strong",[e._v("sub")]),e._v(": jwt所面向的用户")]),e._v(" "),_("li",[_("strong",[e._v("aud")]),e._v(": 接收jwt的一方")]),e._v(" "),_("li",[_("strong",[e._v("exp")]),e._v(": jwt的过期时间，这个过期时间必须要大于签发时间")]),e._v(" "),_("li",[_("strong",[e._v("nbf")]),e._v(": 定义在什么时间之前，该jwt都是不可用的.")]),e._v(" "),_("li",[_("strong",[e._v("iat")]),e._v(": jwt的签发时间")]),e._v(" "),_("li",[_("strong",[e._v("jti")]),e._v(": jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。")])]),e._v(" "),_("p",[_("strong",[e._v("公共的声明")]),e._v(" ：")]),e._v(" "),_("p",[e._v("公共的声明可以添加任何的信息，一般添加用户的相关信息或其他业务需要的必要信息.但不建议添加敏感信息，因为该部分在客户端可解密.")]),e._v(" "),_("p",[_("strong",[e._v("私有的声明")]),e._v(" ：")]),e._v(" "),_("p",[e._v("私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息，因为base64是对称解密的，意味着该部分信息可以归类为明文信息。")]),e._v(" "),_("p",[e._v("定义一个payload:")]),e._v(" "),_("p",[e._v("{")]),e._v(" "),_("p",[e._v('"name": "bole",')]),e._v(" "),_("p",[e._v('"school": "luban"')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("然后将其进行base64加密，得到Jwt的第二部分。")]),e._v(" "),_("p",[e._v("eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9")]),e._v(" "),_("p",[_("strong",[e._v("signature")])]),e._v(" "),_("p",[e._v("jwt的第三部分是一个签证信息，这个签证信息由三部分组成：")]),e._v(" "),_("ul",[_("li",[e._v("header (base64后的)")]),e._v(" "),_("li",[e._v("payload (base64后的)")]),e._v(" "),_("li",[e._v("secret")])]),e._v(" "),_("p",[e._v("这个部分需要base64加密后的header和base64加密后的payload使用"),_("code",[e._v(".")]),e._v("连接组成的字符串，然后通过header中声明的加密方式进行加盐"),_("code",[e._v("secret")]),e._v("组合加密，然后就构成了jwt的第三部分。")]),e._v(" "),_("p",[e._v('HMACSHA256(base64UrlEncode(header) + "." + base64UrlEncode(payload),')]),e._v(" "),_("p",[e._v("secret)")]),e._v(" "),_("p",[e._v("将这三部分用"),_("code",[e._v(".")]),e._v("连接成一个完整的字符串,构成了最终的jwt:")]),e._v(" "),_("p",[e._v("eyJhbGciOiJIUzUxMiJ9.eyJzY2hvb2wiOiJsdWJhbiIsIm5hbWUiOiJib2xlIiwiZXhwIjoxNTkyODA2ODA2LCJpYXQiOjE1OTI3NDY4MDZ9.565mhMJXWOuUEIYYiYxnwrk7BSiR-XMGxd5Ydnp5Ng6nYBrt0D21ChsQFS3HAjkAfBPMhWxdedq2uc5Qhys1aA")]),e._v(" "),_("p",[_("strong",[e._v("注意：secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。")])]),e._v(" "),_("p",[e._v("。")]),e._v(" "),_("h2",{attrs:{id:"_3-1-jwt证书生成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-jwt证书生成"}},[e._v("#")]),e._v(" 3.1 jwt证书生成")]),e._v(" "),_("p",[e._v("JWT令牌生成采用非对称加密算法")]),e._v(" "),_("p",[e._v("1、生成密钥证书 下边命令生成密钥证书，采用RSA 算法每个证书包含公钥和私钥")]),e._v(" "),_("p",[e._v("Keytool 是一个java提供的证书管理工具 。")]),e._v(" "),_("p",[e._v("-alias：密钥的别名")]),e._v(" "),_("p",[e._v("-keyalg：使用的hash算法")]),e._v(" "),_("p",[e._v("-keypass：密钥的访问密码")]),e._v(" "),_("p",[e._v("-keystore：密钥库文件名，xc.keystore保存了生成的证书")]),e._v(" "),_("p",[e._v("-storepass：密钥库的访问密码")]),e._v(" "),_("p",[e._v("查询证书信息： keytool -list -keystore xc.keystore")]),e._v(" "),_("p",[e._v("keytool -genkeypair -alias jwt -keyalg RSA -keypass 12345678 -keystore c:/jwt/jwt.jks -storepass 123456")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013820-8ff4afc1-ea2c-4d00-8517-c0e08fdc184a.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_40%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h2",{attrs:{id:"_3-2-创建基于jwt的认证中心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-创建基于jwt的认证中心"}},[e._v("#")]),e._v(" 3.2 创建基于JWT的认证中心")]),e._v(" "),_("h3",{attrs:{id:"_3-2-1-创建认证中心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-创建认证中心"}},[e._v("#")]),e._v(" 3.2.1 创建认证中心")]),e._v(" "),_("p",[e._v("工程名： luban-gateway-auth-server-jwt")]),e._v(" "),_("p",[e._v("配置中心类AuthServerJwtDbConfig")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明: 使用jwt存储token")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public TokenStore tokenStore(){")]),e._v(" "),_("p",[e._v("return new JwtTokenStore(jwtAccessTokenConverter());")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("jwt转换器")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public JwtAccessTokenConverter jwtAccessTokenConverter() {")]),e._v(" "),_("p",[e._v("JwtAccessTokenConverter converter = new JwtAccessTokenConverter();")]),e._v(" "),_("p",[e._v("//jwt的密钥")]),e._v(" "),_("p",[e._v("converter.setKeyPair(keyPair());")]),e._v(" "),_("p",[e._v("return converter;")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("加载key文件")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public KeyPair keyPair() {")]),e._v(" "),_("p",[e._v("//store path+storepass")]),e._v(" "),_("p",[e._v('KeyStoreKeyFactory keyStoreKeyFactory = new KeyStoreKeyFactory(new ClassPathResource("jwt.jks"), "123456".toCharArray());')]),e._v(" "),_("p",[e._v("//key+keypass")]),e._v(" "),_("p",[e._v('return keyStoreKeyFactory.getKeyPair("jwt", "12345678".toCharArray());')]),e._v(" "),_("p",[e._v('//return keyStoreKeyFactory.getKeyPair("jwt");')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public LubanTokenEnhancer tulingTokenEnhancer() {")]),e._v(" "),_("p",[e._v("return new LubanTokenEnhancer();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:用于查找我们第三方客户端的组件 主要用于查找 数据库表 oauth_client_details")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public ClientDetailsService clientDetails() {")]),e._v(" "),_("p",[e._v("return new JdbcClientDetailsService(dataSource);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:认证服务器能够给哪些 客户端颁发token  我们需要把客户端的配置 存储到")]),e._v(" "),_("p",[e._v("* 数据库中 可以基于内存存储和db存储")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(ClientDetailsServiceConfigurer clients) throws Exception {")]),e._v(" "),_("p",[e._v("clients.withClientDetails(clientDetails());")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:授权服务器的配置的配置")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {")]),e._v(" "),_("p",[e._v("TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain();")]),e._v(" "),_("p",[e._v("tokenEnhancerChain.setTokenEnhancers(Arrays.asList(tulingTokenEnhancer(),jwtAccessTokenConverter()));")]),e._v(" "),_("p",[e._v("endpoints.tokenStore(tokenStore()) //授权服务器颁发的token 怎么存储的")]),e._v(" "),_("p",[e._v("​      .tokenEnhancer(tokenEnhancerChain)")]),e._v(" "),_("p",[e._v("​      .userDetailsService(userDetailsService) //用户来获取token的时候需要 进行账号密码")]),e._v(" "),_("p",[e._v("​      .authenticationManager(authenticationManager);")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:授权服务器安全配置")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(AuthorizationServerSecurityConfigurer security) throws Exception {")]),e._v(" "),_("p",[e._v("//第三方客户端校验token需要带入 clientId 和clientSecret来校验")]),e._v(" "),_("p",[e._v('security .checkTokenAccess("isAuthenticated()")')]),e._v(" "),_("p",[e._v('​       .tokenKeyAccess("isAuthenticated()");//来获取我们的tokenKey需要带入clientId,clientSecret')]),e._v(" "),_("p",[e._v("security.allowFormAuthenticationForClients();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("h3",{attrs:{id:"-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[e._v("#")])]),e._v(" "),_("h3",{attrs:{id:"_3-2-2-创建网关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-创建网关"}},[e._v("#")]),e._v(" 3.2.2 创建网关")]),e._v(" "),_("p",[e._v("工程名 luban-gateway-jwt")]),e._v(" "),_("p",[e._v("创建过滤器  AuthorizationFilter")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public Mono"),_("Void",[e._v(" filter(ServerWebExchange exchange, GatewayFilterChain chain)  {")])],1),e._v(" "),_("p",[e._v("String reqPath = exchange.getRequest().getURI().getPath();")]),e._v(" "),_("p",[e._v('log.info("网关认证开始URL->:{}",reqPath);')]),e._v(" "),_("p",[e._v("//1:不需要认证的url")]),e._v(" "),_("p",[e._v("if(shouldSkip(reqPath)) {")]),e._v(" "),_("p",[e._v('​    log.info("无需认证的路径");')]),e._v(" "),_("p",[e._v("​    return chain.filter(exchange);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("//获取请求头")]),e._v(" "),_("p",[e._v('String authHeader = exchange.getRequest().getHeaders().getFirst("Authorization");')]),e._v(" "),_("p",[e._v("//请求头为空")]),e._v(" "),_("p",[e._v("if(StringUtils.isEmpty(authHeader)) {")]),e._v(" "),_("p",[e._v('​    log.warn("需要认证的url,请求头为空");')]),e._v(" "),_("p",[e._v("//  throw new GateWayException(SystemErrorType.UNAUTHORIZED_HEADER_IS_EMPTY);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("//交易我们的jwt 若jwt不对或者超时都会抛出异常")]),e._v(" "),_("p",[e._v("Claims claims = validateJwtToken(authHeader);")]),e._v(" "),_("p",[e._v("//向headers中放文件，记得build")]),e._v(" "),_("p",[e._v('​    ServerHttpRequest request = exchange.getRequest().mutate().header("username",claims.get("user_name").toString()).build();')]),e._v(" "),_("p",[e._v("//将现在的request 变成 change对象")]),e._v(" "),_("p",[e._v("ServerWebExchange serverWebExchange = exchange.mutate().request(request).build();")]),e._v(" "),_("p",[e._v("//从jwt中解析出权限集合进行判断")]),e._v(" "),_("p",[e._v("hasPremisson(claims,reqPath);")]),e._v(" "),_("p",[e._v("return chain.filter(serverWebExcha")]),e._v(" "),_("p",[e._v("校验jwt token")]),e._v(" "),_("p",[e._v("private Claims validateJwtToken(String authHeader) {")]),e._v(" "),_("p",[e._v("String token =null ;")]),e._v(" "),_("p",[e._v("try{")]),e._v(" "),_("p",[e._v('​     token = StringUtils.substringAfter(authHeader, "bearer ");')]),e._v(" "),_("p",[e._v("​    Jwt<JwsHeader, Claims> parseClaimsJwt = Jwts.parser().setSigningKey(publicKey).parseClaimsJws(token);")]),e._v(" "),_("p",[e._v("​    Claims claims = parseClaimsJwt.getBody();")]),e._v(" "),_("p",[e._v('​    log.info("claims:{}",claims);')]),e._v(" "),_("p",[e._v("​    return claims;")]),e._v(" "),_("p",[e._v("}catch(Exception e){")]),e._v(" "),_("p",[e._v('​    log.error("校验token异常:{},异常信息:{}",token,e.getMessage());')]),e._v(" "),_("p",[e._v("​    // throw new GateWayException(SystemErrorType.INVALID_TOKEN);")]),e._v(" "),_("p",[e._v("​    throw e;")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void afterPropertiesSet() throws Exception {")]),e._v(" "),_("p",[e._v('shouldSkipUrl.add("/oauth/token");')]),e._v(" "),_("p",[e._v('shouldSkipUrl.add("/oauth/check_token");')]),e._v(" "),_("p",[e._v('shouldSkipUrl.add("/user/getCurrentUser");')]),e._v(" "),_("p",[e._v("//初始化公钥")]),e._v(" "),_("p",[e._v("this.publicKey = genPublicKeyByTokenKey();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:去认证服务器上获取tokenKey")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("private String getTokenKey(){")]),e._v(" "),_("p",[e._v("HttpHeaders headers = new HttpHeaders();")]),e._v(" "),_("p",[e._v("headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);")]),e._v(" "),_("p",[e._v("headers.setBasicAuth(MDA.clientId,MDA.clientSecret);")]),e._v(" "),_("p",[e._v("HttpEntity<MultiValueMap<String, String>> entity = new HttpEntity<>(null, headers);")]),e._v(" "),_("p",[e._v("try {")]),e._v(" "),_("p",[e._v("​    ResponseEntity"),_("Map",[e._v(" response = restTemplate.exchange(MDA.getTokenKey, HttpMethod.GET, entity, Map.class);")])],1),e._v(" "),_("p",[e._v('​    String tokenKey = response.getBody().get("value").toString();')]),e._v(" "),_("p",[e._v('​    log.info("去认证服务器获取TokenKey:{}",tokenKey);')]),e._v(" "),_("p",[e._v("​    return tokenKey;")]),e._v(" "),_("p",[e._v("}catch (Exception e) {")]),e._v(" "),_("p",[e._v('​    log.error("远程调用认证服务器获取tokenKey失败:{}",e.getMessage());')]),e._v(" "),_("p",[e._v("​    //throw new GateWayException(SystemErrorType.GET_TOKEN_KEY_ERROR);")]),e._v(" "),_("p",[e._v('​    throw new RuntimeException("远程调用认证服务器获取tokenKey失败");')]),e._v(" "),_("p",[e._v("//生成公钥")]),e._v(" "),_("p",[e._v("private PublicKey genPublicKeyByTokenKey() {")]),e._v(" "),_("p",[e._v("try{")]),e._v(" "),_("p",[e._v("​    String tokenKey = getTokenKey();")]),e._v(" "),_("p",[e._v('​    String dealTokenKey =tokenKey.replaceAll("\\-'),_("em",[e._v("BEGIN PUBLIC KEY\\-")]),e._v('", "").replaceAll("\\-'),_("em",[e._v("END PUBLIC KEY\\-")]),e._v('", "").trim();')]),e._v(" "),_("p",[e._v("​    java.security.Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider());")]),e._v(" "),_("p",[e._v("​    X509EncodedKeySpec pubKeySpec = new X509EncodedKeySpec(Base64.decodeBase64(dealTokenKey));")]),e._v(" "),_("p",[e._v('​    KeyFactory keyFactory = KeyFactory.getInstance("RSA");')]),e._v(" "),_("p",[e._v("​    PublicKey publicKey = keyFactory.generatePublic(pubKeySpec);")]),e._v(" "),_("p",[e._v('​    log.info("生成公钥:{}",publicKey);')]),e._v(" "),_("p",[e._v("​    return publicKey;")]),e._v(" "),_("p",[e._v("}catch (Exception e) {")]),e._v(" "),_("p",[e._v('​    log.info("生成公钥异常:{}",e.getMessage());')]),e._v(" "),_("p",[e._v("​    // throw e;")]),e._v(" "),_("p",[e._v('​    throw new RuntimeException("生成公钥异常");')]),e._v(" "),_("h2",{attrs:{id:"_3-3-测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-测试"}},[e._v("#")]),e._v(" 3.3 测试")]),e._v(" "),_("h3",{attrs:{id:"_3-3-1-获取-jwt-token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-获取-jwt-token"}},[e._v("#")]),e._v(" 3.3.1 获取 jwt token")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013892-77c8bcd6-8fb4-4d8c-a49f-427068ba7569.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_41%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013743-1a56f73c-9ec6-4245-a731-ce502d1bf25e.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_41%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[e._v("access_token:")]),e._v(" "),_("p",[e._v("eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsib3JkZXItc2VydmljZSJdLCJ1c2VyX25hbWUiOiJhZG1pbiIsInNjb3BlIjpbInJlYWQiXSwiYWRkaXRpb25hbEluZm8iOnsicGhvbmUiOm51bGwsIm5pY2tOYW1lIjoi566h55CG5ZGYIiwidXNlcklkIjoxLCJlbWFpbCI6ImFkbWluQHFxLmNvbSJ9LCJleHAiOjE1OTI4MzY2OTYsImF1dGhvcml0aWVzIjpbIi9vcmRlci9saXN0IiwiL29yZGVyL3NhdmVPcmRlciIsIi9vcmRlci9maW5kIiwiL3Byb2R1Y3Qvc2VsZWN0UHJvZHVjdEluZm9CeUlkIl0sImp0aSI6IjBmYjAzNGViLWVjODgtNGFlYS1iMjYxLWUwNTllYWUwNTI1MSIsImNsaWVudF9pZCI6ImZyb250X2FwcCJ9.rYFZRdM1l9ODf3_HezKmdvEbmpP9lWIz0HaDUPtGPtRhm9_Hwxa7CPfTIawOs56yNQCKimYyU370wa6fyxSfTLzKLcvwu5sKqiiJlSNffZw07o7gJjFp46WQK6VWVzDbTkTjs4vY0lRX69I29x5q0_NxirqsIBkq7RH2kirtf4nchWwDpDKJB3QKEjE799ViGQnp-2235WQGIXNXzTgTXcqF4dyEg3nDVh7i6-UO9f-SSlD3umL1LAK50_2MBEDjsupwK7Ha4pYo3LUdJ8yHW789v_RsNm6zx1d_h3rZg28Ayrn-8N4J544Z6J2_2XnJnqPKde4lrOo_-p6ipkHnYw")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013860-f8c6dcd7-dbe0-4b45-ba9d-ad81321ad52a.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_47%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_3-3-2-校验jwt-token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-校验jwt-token"}},[e._v("#")]),e._v(" 3.3.2 校验jwt token")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013836-8389f49e-ffc2-4f7b-a4ac-d34ae6ee6880.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_53%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013720-6044eaa7-7a87-4a52-8d27-c22b54671e92.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_54%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"_3-3-3-jwt校验订单服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-jwt校验订单服务"}},[e._v("#")]),e._v(" 3.3.3 jwt校验订单服务")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013804-87acee1f-f31b-48e8-a05a-4167cc1ef57c.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_42%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013799-a5b79fe3-639d-4b92-9335-bb6c03303a8e.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_42%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("ol",[_("li",[e._v("鲁班电商认证中心实战")])]),e._v(" "),_("h2",{attrs:{id:"_4-1-新建luban-auth模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-新建luban-auth模块"}},[e._v("#")]),e._v(" 4.1 新建luban-auth模块")]),e._v(" "),_("h3",{attrs:{id:"_4-1-1-pom文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-pom文件"}},[e._v("#")]),e._v(" 4.1.1 POM文件")]),e._v('\n<?xml version="1.0" encoding="UTF-8"?>\n'),_("p",[e._v('<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"')]),e._v(" "),_("p",[e._v('​     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"%3E')]),e._v(" "),_("p",[_("modelVersion",[e._v("4.0.0")])],1),e._v(" "),_("parent",[_("p",[e._v("​    "),_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[e._v("​    "),_("artifactId",[e._v("luban-mall")])],1),e._v(" "),_("p",[e._v("​    "),_("version",[e._v("0.0.1-SNAPSHOT")])],1)]),e._v(" "),_("p",[_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[_("artifactId",[e._v("luban-auth")])],1),e._v(" "),_("p",[_("version",[e._v("0.0.1-SNAPSHOT")])],1),e._v(" "),_("p",[_("name",[e._v("luban-auth")])],1),e._v(" "),_("p",[_("description",[e._v("认证授权中心")])],1),e._v(" "),_("properties",[_("p",[e._v("​    <java.version>1.8</java.version>")])]),e._v(" "),_("dependencies",[_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.boot")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-boot-starter")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.boot")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-boot-starter-web")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.alibaba.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-alibaba-nacos-discovery")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-starter-oauth2")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("luban-mybatis")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.boot")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-boot-configuration-processor")])],1),e._v(" "),_("p",[e._v("​      "),_("optional",[e._v("true")])],1),e._v(" "),_("p",[e._v("​    ")])]),e._v(" "),_("build",[_("p",[e._v("​    "),_("plugins")],1),e._v(" "),_("p",[e._v("​      "),_("plugin")],1),e._v(" "),_("p",[e._v("​        "),_("groupId",[e._v("org.springframework.boot")])],1),e._v(" "),_("p",[e._v("​        "),_("artifactId",[e._v("spring-boot-maven-plugin")])],1),e._v(" "),_("p",[e._v("​      ")]),e._v(" "),_("p",[e._v("​    ")])]),e._v(" "),_("h3",{attrs:{id:"_4-1-2-认证中心客户端配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-认证中心客户端配置"}},[e._v("#")]),e._v(" 4.1.2 认证中心客户端配置")]),e._v(" "),_("p",[e._v("采用JDBC存储token信息")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(ClientDetailsServiceConfigurer clients) throws Exception {")]),e._v(" "),_("p",[e._v("clients.withClientDetails(clientDetails());")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public ClientDetailsService clientDetails() {")]),e._v(" "),_("p",[e._v("return new JdbcClientDetailsService(dataSource);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("认证服务器端点配置")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {")]),e._v(" "),_("p",[e._v("//通过增强器拿到用户信息")]),e._v(" "),_("p",[e._v("TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain();")]),e._v(" "),_("p",[e._v("tokenEnhancerChain.setTokenEnhancers(Arrays.asList(JwtTokenEnhancer(),jwtAccessTokenConverter()));")]),e._v(" "),_("p",[e._v("endpoints.tokenStore(tokenStore()) //授权服务器颁发的token 怎么存储的")]),e._v(" "),_("p",[e._v("​      .tokenEnhancer(tokenEnhancerChain)")]),e._v(" "),_("p",[e._v("​      .userDetailsService(JwtUserDetailService) //用户来获取token的时候需要 进行账号密码")]),e._v(" "),_("p",[e._v("​      .authenticationManager(authenticationManager);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public JwtAccessTokenConverter jwtAccessTokenConverter() {")]),e._v(" "),_("p",[e._v("JwtAccessTokenConverter converter = new JwtAccessTokenConverter();")]),e._v(" "),_("p",[e._v("//jwt的密钥")]),e._v(" "),_("p",[e._v("converter.setKeyPair(keyPair());")]),e._v(" "),_("p",[e._v("return converter;")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public KeyPair keyPair() {")]),e._v(" "),_("p",[e._v("KeyStoreKeyFactory keyStoreKeyFactory = new KeyStoreKeyFactory(new ClassPathResource(jwtCAProperties.getKeyPairName()), jwtCAProperties.getKeyPairStoreSecret().toCharArray());")]),e._v(" "),_("p",[e._v("return keyStoreKeyFactory.getKeyPair(jwtCAProperties.getKeyPairAlias(), jwtCAProperties.getKeyPairSecret().toCharArray())")]),e._v(" "),_("p",[_("strong",[e._v("授权服务器安全配置")])]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:授权服务器安全配置")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(AuthorizationServerSecurityConfigurer security) throws Exception {")]),e._v(" "),_("p",[e._v("//第三方客户端校验token需要带入 clientId 和clientSecret来校验")]),e._v(" "),_("p",[e._v('security .checkTokenAccess("isAuthenticated()")')]),e._v(" "),_("p",[e._v('​       .tokenKeyAccess("isAuthenticated()");//来获取我们的tokenKey需要带入clientId,clientSecret')]),e._v(" "),_("p",[e._v("security.allowFormAuthenticationForClients();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[_("strong",[e._v("增强器重写")])]),e._v(" "),_("p",[e._v("public OAuth2AccessToken enhance(OAuth2AccessToken accessToken, OAuth2Authentication authentication) {")]),e._v(" "),_("p",[e._v("MemberDetails memberDetails = (MemberDetails) authentication.getPrincipal();")]),e._v(" "),_("p",[e._v("final Map<String, Object> additionalInfo = new HashMap<>();")]),e._v(" "),_("p",[e._v("final Map<String, Object> retMap = new HashMap<>();")]),e._v(" "),_("p",[e._v("//暴露memberId到Jwt的令牌中,后期可以根据自己的业务需要 进行添加字段")]),e._v(" "),_("p",[e._v('additionalInfo.put("memberId",memberDetails.getUmsMember().getId());')]),e._v(" "),_("p",[e._v('additionalInfo.put("nickName",memberDetails.getUmsMember().getNickname());')]),e._v(" "),_("p",[e._v('additionalInfo.put("integration",memberDetails.getUmsMember().getIntegration());')]),e._v(" "),_("p",[e._v('retMap.put("additionalInfo",additionalInfo);')]),e._v(" "),_("p",[e._v("((DefaultOAuth2AccessToken) accessToken).setAdditionalInformation(retMap);")]),e._v(" "),_("p",[e._v("return accessTo")]),e._v(" "),_("h3",{attrs:{id:"_4-1-3-web安全配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3-web安全配置"}},[e._v("#")]),e._v(" 4.1.3 WEB安全配置")]),e._v(" "),_("p",[e._v("public class WebSecurityConfig extends WebSecurityConfigurerAdapter {")]),e._v(" "),_("p",[e._v("@Autowired")]),e._v(" "),_("p",[e._v("private MallUserDetailService JwtUserDetailService;")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 方法实现说明:用于构建用户认证组件,需要传递userDetailsService和密码加密器")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("protected void configure(AuthenticationManagerBuilder auth) throws Exception {")]),e._v(" "),_("p",[e._v("​    auth.userDetailsService(JwtUserDetailService).passwordEncoder(passwordEncoder());")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("/**")]),e._v(" "),_("p",[e._v("* 设置前台静态资源不拦截")]),e._v(" "),_("p",[e._v("* @param web")]),e._v(" "),_("p",[e._v("* @throws Exception")]),e._v(" "),_("p",[e._v("*/")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public void configure(WebSecurity web) throws Exception {")]),e._v(" "),_("p",[e._v('​    web.ignoring().antMatchers("/assets/'),_("strong",[e._v('", "/css/')]),e._v('", "/images/**");')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public PasswordEncoder passwordEncoder() {")]),e._v(" "),_("p",[e._v("​    return new BCryptPasswordEncoder();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("@Bean")]),e._v(" "),_("p",[e._v("public AuthenticationManager authenticationManagerBean() throws Exception {")]),e._v(" "),_("p",[e._v("​    return super.authenticationManagerBean();")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("public static void main(String[] args) {")]),e._v(" "),_("p",[e._v('​    System.out.println(new BCryptPasswordEncoder().encode("123456"))')]),e._v(" "),_("p",[_("strong",[e._v("用户登录查询服务")])]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public UserDetails loadUserByUsername(String userName) throws UsernameNotFoundException {")]),e._v(" "),_("p",[e._v("if(StringUtils.isEmpty(userName)) {")]),e._v(" "),_("p",[e._v('​    log.warn("用户登陆用户名为空:{}",userName);')]),e._v(" "),_("p",[e._v('​    throw new UsernameNotFoundException("用户名不能为空");')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("UmsMember umsMember = getByUsername(userName);")]),e._v(" "),_("p",[e._v("if(null == umsMember) {")]),e._v(" "),_("p",[e._v('​    log.warn("根据用户名没有查询到对应的用户信息:{}",userName);')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v('log.info("根据用户名:{}获取用户登陆信息:{}",userName,umsMember);')]),e._v(" "),_("p",[e._v("MemberDetails memberDetails = new MemberDetails(umsMember);")]),e._v(" "),_("p",[e._v("return memberDetai")]),e._v(" "),_("h2",{attrs:{id:"_4-2-新建luban-gateway模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-新建luban-gateway模块"}},[e._v("#")]),e._v(" 4.2 新建luban-gateway模块")]),e._v(" "),_("h3",{attrs:{id:"_4-2-1-pom配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-pom配置"}},[e._v("#")]),e._v(" 4.2.1 POM配置")]),e._v('\n<?xml version="1.0" encoding="UTF-8"?>\n'),_("p",[e._v('<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"')]),e._v(" "),_("p",[e._v('​     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"%3E')]),e._v(" "),_("p",[_("modelVersion",[e._v("4.0.0")])],1),e._v(" "),_("p",[_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[_("artifactId",[e._v("luban-gateway")])],1),e._v(" "),_("p",[_("version",[e._v("1.0-SNAPSHOT")])],1),e._v(" "),_("p",[_("name",[e._v("luban-gateway")])],1),e._v(" "),_("p",[_("description",[e._v("网关")])],1),e._v(" "),_("parent",[_("p",[e._v("​    "),_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[e._v("​    "),_("artifactId",[e._v("luban-mall")])],1),e._v(" "),_("p",[e._v("​    "),_("version",[e._v("0.0.1-SNAPSHOT")])],1)]),e._v(" "),_("dependencies",[_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.luban")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("mall-common")])],1),e._v(" "),_("p",[e._v("​      "),_("exclusions")],1),e._v(" "),_("p",[e._v("​        "),_("exclusion")],1),e._v(" "),_("p",[e._v("​          "),_("groupId",[e._v("com.alibaba")])],1),e._v(" "),_("p",[e._v("​          "),_("artifactId",[e._v("druid-spring-boot-starter")])],1),e._v(" "),_("p",[e._v("​        ")]),e._v(" "),_("p",[e._v("​        "),_("exclusion")],1),e._v(" "),_("p",[e._v("​          "),_("groupId",[e._v("com.github.pagehelper")])],1),e._v(" "),_("p",[e._v("​          "),_("artifactId",[e._v("pagehelper-spring-boot-starter")])],1),e._v(" "),_("p",[e._v("​        ")]),e._v(" "),_("p",[e._v("​      ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-starter-gateway")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.alibaba.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-alibaba-nacos-discovery")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("io.jsonwebtoken")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("jjwt-api")])],1),e._v(" "),_("p",[e._v("​      "),_("version",[e._v("0.10.5")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("io.jsonwebtoken")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("jjwt-impl")])],1),e._v(" "),_("p",[e._v("​      "),_("version",[e._v("0.10.5")])],1),e._v(" "),_("p",[e._v("​      "),_("scope",[e._v("runtime")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("io.jsonwebtoken")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("jjwt-jackson")])],1),e._v(" "),_("p",[e._v("​      "),_("version",[e._v("0.10.5")])],1),e._v(" "),_("p",[e._v("​      "),_("scope",[e._v("runtime")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("org.springframework.boot")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-boot-starter-actuator")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.alibaba.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-starter-alibaba-sentinel")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.alibaba.csp")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("sentinel-datasource-nacos")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("com.alibaba.cloud")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("spring-cloud-alibaba-sentinel-gateway")])],1),e._v(" "),_("p",[e._v("​    ")]),e._v(" "),_("p",[e._v("​    "),_("dependency")],1),e._v(" "),_("p",[e._v("​      "),_("groupId",[e._v("javax.servlet")])],1),e._v(" "),_("p",[e._v("​      "),_("artifactId",[e._v("javax.servlet-api")])],1),e._v(" "),_("p",[e._v("​      "),_("version",[e._v("4.0.1")])],1),e._v(" "),_("p",[e._v("​      "),_("scope",[e._v("compile")])],1),e._v(" "),_("p",[e._v("​    ")])]),e._v(" "),_("p",[e._v("<")]),e._v(" "),_("h3",{attrs:{id:"_4-2-2-新建过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-新建过滤器"}},[e._v("#")]),e._v(" 4.2.2  新建过滤器")]),e._v(" "),_("ol",[_("li",[e._v("校验是否需要拦截")])]),e._v(" "),_("p",[e._v("​     如果不需要直接跳过拦截")]),e._v(" "),_("ol",[_("li",[e._v("如果需要拦截：")])]),e._v(" "),_("p",[e._v("（1）拿到请求头")]),e._v(" "),_("p",[e._v("（2）判断Authorization的请求头是否为空")]),e._v(" "),_("p",[e._v("（3）校验我们的jwt 若jwt不对或者超时都会抛出异常")]),e._v(" "),_("p",[e._v("（4）第四步 把从jwt中解析出来的 用户登陆信息存储到请求头中")]),e._v(" "),_("p",[e._v("@Override")]),e._v(" "),_("p",[e._v("public Mono"),_("Void",[e._v(" filter(ServerWebExchange exchange, GatewayFilterChain chain) {")])],1),e._v(" "),_("p",[e._v("String currentUrl = exchange.getRequest().getURI().getPath();")]),e._v(" "),_("p",[e._v("//1:不需要认证的url")]),e._v(" "),_("p",[e._v("if(shouldSkip(currentUrl)) {")]),e._v(" "),_("p",[e._v('​    //log.info("跳过认证的URL:{}",currentUrl);')]),e._v(" "),_("p",[e._v("​    return chain.filter(exchange);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v('//log.info("需要认证的URL:{}",currentUrl);')]),e._v(" "),_("p",[e._v("//第一步:解析出我们Authorization的请求头  value为: “bearer XXXXXXXXXXXXXX”")]),e._v(" "),_("p",[e._v('String authHeader = exchange.getRequest().getHeaders().getFirst("Authorization");')]),e._v(" "),_("p",[e._v("//第二步:判断Authorization的请求头是否为空")]),e._v(" "),_("p",[e._v("if(StringUtils.isEmpty(authHeader)) {")]),e._v(" "),_("p",[e._v('​    log.warn("需要认证的url,请求头为空");')]),e._v(" "),_("p",[e._v("​    throw new GateWayException(ResultCode.AUTHORIZATION_HEADER_IS_EMPTY);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("//第三步 校验我们的jwt 若jwt不对或者超时都会抛出异常")]),e._v(" "),_("p",[e._v("Claims claims = JwtUtils.validateJwtToken(authHeader,publicKey);")]),e._v(" "),_("p",[e._v("//第四步 把从jwt中解析出来的 用户登陆信息存储到请求头中")]),e._v(" "),_("p",[e._v("ServerWebExchange webExchange = wrapHeader(exchange,claims);")]),e._v(" "),_("p",[e._v("return chain.filter(webExcha")]),e._v(" "),_("p",[_("strong",[e._v("从请求中拿到用户信息")])]),e._v(" "),_("p",[e._v("private ServerWebExchange wrapHeader(ServerWebExchange serverWebExchange,Claims claims) {")]),e._v(" "),_("p",[e._v("String loginUserInfo = JSON.toJSONString(claims);")]),e._v(" "),_("p",[e._v('//log.info("jwt的用户信息:{}",loginUserInfo);')]),e._v(" "),_("p",[e._v('String memberId = claims.get("additionalInfo",Map.class).get("memberId").toString();')]),e._v(" "),_("p",[e._v('String nickName = claims.get("additionalInfo",Map.class).get("nickName").toString();')]),e._v(" "),_("p",[e._v("//向headers中放文件，记得build")]),e._v(" "),_("p",[e._v("ServerHttpRequest request = serverWebExchange.getRequest().mutate()")]),e._v(" "),_("p",[e._v('​      .header("username",claims.get("user_name",String.class))')]),e._v(" "),_("p",[e._v('​      .header("memberId",memberId)')]),e._v(" "),_("p",[e._v('​      .header("nickName",nickName)')]),e._v(" "),_("p",[e._v("​      .build();")]),e._v(" "),_("p",[e._v("//将现在的request 变成 change对象")]),e._v(" "),_("p",[e._v("return serverWebExchange.mutate().request(request).build")]),e._v(" "),_("h3",{attrs:{id:"_4-2-3-测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-测试"}},[e._v("#")]),e._v(" 4.2.3 测试")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013750-65887095-755c-4bc6-bcb9-5d402cb32d1c.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_41%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013891-1a1c80f1-eab2-4955-b5cf-a51904a5a145.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_40%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h2",{attrs:{id:"_4-3-新建luban-member会员模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-新建luban-member会员模块"}},[e._v("#")]),e._v(" 4.3 新建luban-member会员模块")]),e._v(" "),_("h3",{attrs:{id:"_4-3-1-登录获取token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-登录获取token"}},[e._v("#")]),e._v(" 4.3.1 登录获取token")]),e._v(" "),_("p",[e._v('@ApiOperation("会员登录")')]),e._v(" "),_("p",[e._v('@RequestMapping(value = "/login", method = RequestMethod.POST)')]),e._v(" "),_("p",[e._v("@ResponseBody")]),e._v(" "),_("p",[e._v("public CommonResult login(@RequestParam String username,")]),e._v(" "),_("p",[e._v("​             @RequestParam String password) {")]),e._v(" "),_("p",[e._v("TokenInfo tokenInfo = memberService.login(username, password);")]),e._v(" "),_("p",[e._v("if (tokenInfo == null) {")]),e._v(" "),_("p",[e._v('​    return CommonResult.validateFailed("用户名或密码错误");')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("Map<String, String> tokenMap = new HashMap<>();")]),e._v(" "),_("p",[e._v('tokenMap.put("token", tokenInfo.getAccess_token());')]),e._v(" "),_("p",[e._v('tokenMap.put("tokenHead", tokenHead);')]),e._v(" "),_("p",[e._v('tokenMap.put("refreshToken",tokenInfo.getRefresh_token());')]),e._v(" "),_("p",[e._v("return CommonResult.success(tokenMap);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[_("strong",[e._v("调用认证服务器")])]),e._v(" "),_("p",[e._v("public TokenInfo login(String username, String password) {")]),e._v(" "),_("p",[e._v("ResponseEntity"),_("TokenInfo",[e._v(" response;")])],1),e._v(" "),_("p",[e._v("try{")]),e._v(" "),_("p",[e._v("​    //远程调用认证服务器 进行用户登陆")]),e._v(" "),_("p",[e._v("​    response = restTemplate.exchange(MDA.OAUTH_LOGIN_URL, HttpMethod.POST, wrapOauthTokenRequest(username,password), TokenInfo.class);")]),e._v(" "),_("p",[e._v("​    TokenInfo tokenInfo = response.getBody();")]),e._v(" "),_("p",[e._v('​    LOGGER.info("根据用户名:{}登陆成功:TokenInfo:{}",username,tokenInfo);')]),e._v(" "),_("p",[e._v("​    return tokenInfo;")]),e._v(" "),_("p",[e._v("}catch (Exception e) {")]),e._v(" "),_("p",[e._v('​    LOGGER.error("根据用户名:{}登陆异常:{}",username,e.getMessage());')]),e._v(" "),_("p",[e._v("​    return null;")]),e._v(" "),_("p",[_("strong",[e._v("封装请求报文")])]),e._v(" "),_("p",[e._v("private HttpEntity<MultiValueMap<String, String>> wrapOauthTokenRequest(String userName, String password) {")]),e._v(" "),_("p",[e._v("//封装oauth2 请求头 clientId clientSecret")]),e._v(" "),_("p",[e._v("HttpHeaders httpHeaders = wrapHttpHeaders();")]),e._v(" "),_("p",[e._v("//封装请求参数")]),e._v(" "),_("p",[e._v("MultiValueMap<String, String> reqParams = new LinkedMultiValueMap<>();")]),e._v(" "),_("p",[e._v("reqParams.add(MDA.USER_NAME,userName);")]),e._v(" "),_("p",[e._v("reqParams.add(MDA.PASS,password);")]),e._v(" "),_("p",[e._v("reqParams.add(MDA.GRANT_TYPE,MDA.PASS);")]),e._v(" "),_("p",[e._v("reqParams.add(MDA.SCOPE,MDA.SCOPE_AUTH);")]),e._v(" "),_("p",[e._v("//封装请求参数")]),e._v(" "),_("p",[e._v("HttpEntity<MultiValueMap<String, String>> entity = new HttpEntity<>(reqParams, httpHeaders);")]),e._v(" "),_("p",[e._v("return entity")]),e._v(" "),_("h3",{attrs:{id:"_4-3-2-获取会员信息校验token"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-获取会员信息校验token"}},[e._v("#")]),e._v(" 4.3.2 获取会员信息校验token")]),e._v(" "),_("p",[e._v('@ApiOperation(value = "获取会员信息#杨过添加",notes = "不包含会员等级信息,会员需要被拆分成微服务")')]),e._v(" "),_("p",[e._v('@GetMapping("/loadUmsMember")')]),e._v(" "),_("p",[e._v("public CommonResult"),_("UmsMember",[e._v(" loadUserByUsername(String username){")])],1),e._v(" "),_("p",[e._v("UmsMember umsMember = umsMemberService.getByUsername(username);")]),e._v(" "),_("p",[e._v("if(umsMember == null){")]),e._v(" "),_("p",[e._v('​    return CommonResult.failed("会员不存在或者已经被禁用");')]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("return CommonResult.success(umsMember);")]),e._v(" "),_("p",[e._v("}")]),e._v(" "),_("p",[e._v("校验token")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013919-a9f90d95-3ae2-405f-bae2-0ec2cde7a9d4.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_53%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),e._v(" "),_("h3",{attrs:{id:"-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-4"}},[e._v("#")]),e._v(" "),_("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/1300531/1594620013838-2c624d53-2d97-45dc-9292-d5f9e5629717.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_36%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})])],1)}),[],!1,null,null,null);_.default=a.exports}}]);