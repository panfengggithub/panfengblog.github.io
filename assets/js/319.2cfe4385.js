(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{733:function(e,s,n){"use strict";n.r(s);var a=n(1),t=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"概要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[e._v("#")]),e._v(" "),s("strong",[e._v("概要：")])]),e._v(" "),s("ol",[s("li",[e._v("Dubbo 快速入门")]),e._v(" "),s("li",[e._v("Dubbo 常规配置说明")])]),e._v(" "),s("h2",{attrs:{id:"一、dubbo-快速入门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、dubbo-快速入门"}},[e._v("#")]),e._v(" 一、Dubbo 快速入门")]),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"dubbo核心功能解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dubbo核心功能解释"}},[e._v("#")]),e._v(" "),s("strong",[e._v("Dubbo核心功能解释")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("dubbo 阿里开源的一个SOA服务治理框架，从目前来看把它称作是一个RPC远程调用框架更为贴切。单从RPC框架来说，功能较完善，支持多种传输和序列化方案。所以想必大家已经知道他的核心功能了：就是远程调用。\n")])])]),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/FMTFpoDqNNYJWhsP/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("h3",{attrs:{id:"快速演示dubbo的远程调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速演示dubbo的远程调用"}},[e._v("#")]),e._v(" "),s("strong",[e._v("快速演示Dubbo的远程调用")])]),e._v(" "),s("p",[e._v("实现步骤")]),e._v(" "),s("ul",[s("li",[e._v("[ ] 创建服务端项目\n"),s("ul",[s("li",[e._v("[ ] 引入dubbo 依赖")]),e._v(" "),s("li",[e._v("[ ] 编写服务端代码")])])]),e._v(" "),s("li",[e._v("[ ] 创建客户端项目\n"),s("ul",[s("li",[e._v("[ ] 引入dubbo 依赖")]),e._v(" "),s("li",[e._v("[ ] 编写客户端调用代码")])])])]),e._v(" "),s("p",[e._v("dubbo 引入：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>dubbo</artifactId>\n    <version>2.6.2</version>\n</dependency>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[e._v("dubbo 默认依懒：\n"),s("img",{attrs:{src:"https://images-cdn.shimo.im/VKqdCaJ0LZY3NwLJ/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("客户端代码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('static String remoteUrl = "dubbo://127.0.0.1:12345/tuling.dubbo.server.UserService";\n// 构建远程服务对象\npublic UserService buildRemoteService(String remoteUrl) {\n    ApplicationConfig application = new ApplicationConfig();\n    application.setName("young-app");\n    ReferenceConfig<UserService> referenceConfig = new ReferenceConfig<>();\n    referenceConfig.setApplication(application);\n    referenceConfig.setInterface(UserService.class);\n    referenceConfig.setUrl(remoteUrl);\n    UserService userService = referenceConfig.get();\n    return userService;\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("服务端代码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('public void openServer(int port) {\n    ApplicationConfig config = new ApplicationConfig();\n    config.setName("simple-app");\n    ProtocolConfig protocolConfig=new ProtocolConfig();\n    protocolConfig.setName("dubbo");\n    protocolConfig.setPort(port);\n    protocolConfig.setThreads(20);\n    ServiceConfig<UserService> serviceConfig=new ServiceConfig();\n    serviceConfig.setApplication(config);\n    serviceConfig.setProtocol(protocolConfig);\n    serviceConfig.setRegistry(new RegistryConfig(RegistryConfig.NO_AVAILABLE));\n    serviceConfig.setInterface(UserService.class);\n    serviceConfig.setRef(new UserServiceImpl());\n    serviceConfig.export();\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("h3",{attrs:{id:"基于dubbo实现服务集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于dubbo实现服务集群"}},[e._v("#")]),e._v(" "),s("strong",[e._v("基于Dubbo实现服务集群：")])]),e._v(" "),s("p",[e._v("在上一个例子中如多个服务的集群？即当有多个服务同时提供的时候，客户端该调用哪个？以什么方式进行调用以实现负载均衡？\n一个简单的办法是将多个服务的URL同时设置到客户端并初始化对应的服务实例，然后以轮询的方式进行调用。\n"),s("img",{attrs:{src:"https://images-cdn.shimo.im/Pyt2iFxChpwth38s/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("但如果访问增大，需要扩容服务器数量，那么就必须增加配置重启客户端实例。显然这不是我们愿意看到的。Dubbo引入了服务注册中的概念，可以解决动态扩容的问题。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/zPiAIuN3PMkwLNVD/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("演示基于注册中心实现服集群：")]),e._v(" "),s("ul",[s("li",[e._v("[ ] 修改服务端代码，添加multicast 注册中心。")]),e._v(" "),s("li",[e._v("[ ] 修改客户端代码，添加multicast 注册中心。")]),e._v(" "),s("li",[e._v("[ ] 观察 多个服务时，客户端如何调用。")]),e._v(" "),s("li",[e._v("[ ] 观察 动态增减服务，客户端的调用。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# 服务端连接注册中心\nserviceConfig.setRegistry(new RegistryConfig("multicast://224.1.1.1:2222"));\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('# 客户端连接注册中心\nreferenceConfig.setRegistry(new RegistryConfig("multicast://224.1.1.1:2222"));\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("#查看 基于UDP 占用的2222 端口\nnetstat -ano|findstr 2222\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("基于spring IOC维护Dubbo 实例")]),e._v("\n在前面两个例子中 出现了,ApplicationConfig、ReferenceConfig、RegistryConfig、com.alibaba.dubbo.config.ServiceConfig等实例 ，很显然不需要每次调用的时候都去创建该实例那就需要一个IOC 容器去管理这些实例，spring 是一个很好的选择。")]),e._v(" "),s("p",[s("strong",[e._v("提供者配置----------------------------------")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">\n    \x3c!-- 提供方应用信息，用于计算依赖关系 --\x3e\n    <dubbo:application name="simple-app"  />\n    \x3c!-- 使用multicast广播注册中心暴露服务地址 --\x3e\n    <dubbo:registry address="multicast://224.5.6.7:1234" />\n    \x3c!-- 用dubbo协议在20880端口暴露服务 --\x3e\n    <dubbo:protocol name="dubbo" port="20880" />\n    \x3c!-- 声明需要暴露的服务接口 --\x3e\n    <dubbo:service interface="tuling.dubbo.server.UserService" ref="userService" />\n    \x3c!-- 和本地bean一样实现服务 --\x3e\n    <bean id="userService" class="tuling.dubbo.server.impl.UserServiceImpl" />\n</beans>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("p",[e._v("提供者服务暴露代码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('ApplicationContext context = new ClassPathXmlApplicationContext("/spring-provide.xml");\n((ClassPathXmlApplicationContext) context).start();\nSystem.in.read();\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[s("strong",[e._v("消费者配置---------------------------------------")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">\n\n    <dubbo:application name="young-app"/>\n    <dubbo:registry address="multicast://224.5.6.7:1234"/>\n    <dubbo:reference id="userService" interface="tuling.dubbo.server.UserService"/>\n</beans>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("消费者调用代码：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('ApplicationContext context = new ClassPathXmlApplicationContext("/spring-consumer.xml");\nUserService userService = context.getBean(UserService.class);\nUserVo u = userService.getUser(1111);\nSystem.out.println(u);\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h2",{attrs:{id:"二、dubbo常规配置说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、dubbo常规配置说明"}},[e._v("#")]),e._v(" 二、Dubbo常规配置说明")]),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"dubbo配置的整体说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dubbo配置的整体说明"}},[e._v("#")]),e._v(" "),s("strong",[e._v("Dubbo配置的整体说明：")])]),e._v(" "),s("p",[e._v("| "),s("strong",[e._v("标签")]),e._v("   | "),s("strong",[e._v("用途")]),e._v("   | "),s("strong",[e._v("解释")]),e._v("   |\n|:----|:----|\n| "),s("RouterLink",{attrs:{to:"dubbo:application/"}},[e._v("dubbo:application/")]),e._v("   | 公共 | 用于配置当前应用信息，不管该应用是提供者还是消费者   |\n| "),s("RouterLink",{attrs:{to:"dubbo:registry/"}},[e._v("dubbo:registry/")]),e._v("   | 公共 | 用于配置连接注册中心相关信息   |\n| "),s("RouterLink",{attrs:{to:"dubbo:protocol/"}},[e._v("dubbo:protocol/")]),e._v("   | 服务   | 用于配置提供服务的协议信息，协议由提供方指定，消费方被动接受   |\n| "),s("RouterLink",{attrs:{to:"dubbo:service/"}},[e._v("dubbo:service/")]),e._v("   | 服务   | 用于暴露一个服务，定义服务的元信息，一个服务可以用多个协议暴露，一个服务也可以注册到多个注册中心   |\n| "),s("RouterLink",{attrs:{to:"dubbo:provider/"}},[e._v("dubbo:provider/")]),e._v("   | 服务   | 当 ProtocolConfig 和 ServiceConfig 某属性没有配置时，采用此缺省值，可选   |\n| "),s("RouterLink",{attrs:{to:"dubbo:consumer/"}},[e._v("dubbo:consumer/")]),e._v("   | 引用   | 当 ReferenceConfig 某属性没有配置时，采用此缺省值，可选   |\n| "),s("RouterLink",{attrs:{to:"dubbo:reference/"}},[e._v("dubbo:reference/")]),e._v("   | 引用   | 用于创建一个远程服务代理，一个引用可以指向多个注册中心   |\n| "),s("RouterLink",{attrs:{to:"dubbo:method/"}},[e._v("dubbo:method/")]),e._v("   | 公共 | 用于 ServiceConfig 和 ReferenceConfig 指定方法级的配置信息   |\n| "),s("RouterLink",{attrs:{to:"dubbo:argument/"}},[e._v("dubbo:argument/")]),e._v("   | 公共 | 用于指定方法参数配置   |")],1),e._v(" "),s("p",[e._v("配置关系图：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/3xdIwJ9pAi8RxcyL/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[s("strong",[e._v("配置分类")]),e._v("\n所有配置项分为三大类。")]),e._v(" "),s("ol",[s("li",[e._v("服务发现：表示该配置项用于服务的注册与发现，目的是让消费方找到提供方。")]),e._v(" "),s("li",[e._v("服务治理：表示该配置项用于治理服务间的关系，或为开发测试提供便利条件。")]),e._v(" "),s("li",[e._v("性能调优：表示该配置项用于调优性能，不同的选项对性能会产生影响。")])]),e._v(" "),s("h3",{attrs:{id:"dubbo-配置的一些套路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-配置的一些套路"}},[e._v("#")]),e._v(" "),s("strong",[e._v("dubbo 配置的一些套路:")])]),e._v(" "),s("p",[e._v('先来看一个简单配置\n<dubbo:service interface="tuling.dubbo.server.UserService"   '),s("strong",[e._v("timeout")]),e._v('="2000">\n通过字面了解 timeout即服务的执行超时时间。但当服务执行真正超时的时候 报的错跟timeout并没有半毛钱的关系，其异常堆栈如下：\n'),s("img",{attrs:{src:"https://images-cdn.shimo.im/oBluSDTPRy8hTJ10/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("可以看到错误表达的意思是 因为Channel 关闭导致 无法返回 Response 消息。\n出现这情况的原因在于 虽然timeout 配置在服务端去是用在客户端，其表示的是客户端调用超时间，而非服务端方法的执行超时。当我们去看客户端的日志时候就能看到timeout异常了")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/krm9nmiGsEgojLPG/image.png!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("类似这种配在服务端用在客户端的配置还有很多，如retries/riː'traɪ/(重试次数)、async/əˈsɪŋk/（是否异步）、loadbalance(负载均衡)。。。等。\n**套路一：**"),s("em",[e._v("服务端配置客户端来使用")]),e._v("。\n注：其参数传递机制是 服务端所有配置都会封装到URL参数，在通过注册中心传递到客户端")]),e._v(" "),s("p",[e._v("如果需要暴露多个服务的时候，每个服务都要设置其超时时间，貌似有点繁琐。Dubbo中可以通过  "),s("a",{attrs:{href:"dubbo:provider"}},[e._v("dubbo:provider")]),e._v(" 来实现服务端缺省配置。它可以同时为 "),s("a",{attrs:{href:"dubbo:service"}},[e._v("dubbo:service")]),e._v(" 和 "),s("a",{attrs:{href:"dubbo:protocol"}},[e._v("dubbo:protocol")]),e._v(" 两个标签提供缺省配置。如：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('#相当于每个服务提供者设置了超时时间 和重试次数\n<dubbo:provider timeout="2000" retries="2"></dubbo:provider>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("同样客户端也有缺省配置标签："),s("a",{attrs:{href:"dubbo:consumer"}},[e._v("dubbo:consumer")]),e._v('，这些缺省设置可以配置多个 通过 <dubbo:service provider="providerId"> ,如果没指定就用第一个。\n、\n'),s("strong",[e._v("套路二")]),e._v("："),s("a",{attrs:{href:"dubbo:provider"}},[e._v("dubbo:provider")]),e._v("与"),s("a",{attrs:{href:"dubbo:service"}},[e._v("dubbo:service")]),e._v(" ，"),s("a",{attrs:{href:"dubbo:consumer"}},[e._v("dubbo:consumer")]),e._v("与"),s("a",{attrs:{href:"dubbo:reference"}},[e._v("dubbo:reference")]),e._v("傻傻分不清楚")]),e._v(" "),s("p",[e._v('在服务端配置timeout 之后 所有客户端都会采用该方超时时间，其客户端可以自定义超时时间吗？通过  <dubbo:reference timeout="2000"> 可以设定或者在<dubbo:consumer timeout="2000"> 也可以设定 甚至可以设定到方法级别 <dubbo:method name="getUser" timeout="2000"/>。加上服务端的配置，超时总共有6处可以配置。如果6处都配置了不同的值，最后肯定只会有一个超时值生效，其优先级如下：')]),e._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/SwlDz0a4ZiM0xJh6/dubbo_config_override.jpg!thumbnail",alt:"图片"}})]),e._v(" "),s("p",[e._v("小提示：通过DefaultFuture的get 方法就可观测到实际的超时设置。\ncom.alibaba.dubbo.remoting.exchange.support.DefaultFuture")]),e._v(" "),s("p",[e._v("**套路三：**同一属性到处配置，优先级要小心。")]),e._v(" "),s("h3",{attrs:{id:"一般建议配置示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一般建议配置示例"}},[e._v("#")]),e._v(" "),s("strong",[e._v("一般建议配置示例：")])]),e._v(" "),s("p",[e._v("提供端：---------------------------")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(' <dubbo:application name="demo-provider"/>\n <dubbo:registry protocol="redis" address="192.168.0.147:6379" check="true"/>\n<dubbo:protocol name="dubbo" port="20880"/>\n<dubbo:provider group="tuling.dubbo.demo"\n                threadpool="fixed"\n                threads="500"\n                timeout="5000"\n                retries="2"\n/>\n<dubbo:service interface="com.tuling.teach.service.DemoService"\n               timeout="5000"\n               retries="1"\n               version="3.0.0"\n               ref="demoService"/>\n<bean id="demoService" class="com.tuling.teach.service.DemoServiceImpl"/>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br")])]),s("p",[e._v("消费端示例：--------------------")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<dubbo:application name="demo-consumer"/>\n<dubbo:registry protocol="redis" address="192.168.0.147:6379" check="true"/>\n<dubbo:consumer timeout="5000" retries="2"\n                group="tuling.dubbo.demo"\n                version="1.0.0"/>\n<dubbo:reference\n        timeout="3000" retries="1"\n        id="demoService"\n        version="*"\n        interface="com.tuling.teach.service.DemoService"/>\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[e._v("#")])])])}),[],!1,null,null,null);s.default=t.exports}}]);