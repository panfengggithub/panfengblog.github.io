(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{515:function(s,a,n){"use strict";n.r(a);var t=n(1),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" MySQL")]),s._v(" "),a("h2",{attrs:{id:"_1、mysql-中有哪几种锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、mysql-中有哪几种锁"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1、MySQL 中有哪几种锁？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、表级锁：开销小，加锁快；不会出现死锁；锁定粒度大，发生锁冲突的概率最\n高，并发度最低。\n2、行级锁：开销大，加锁慢；会出现死锁；锁定粒度最小，发生锁冲突的概率最\n低，并发度也最高。\n3、页面锁：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表\n锁和行锁之间，并发度一般。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_2、mysql-中有哪些不同的表格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、mysql-中有哪些不同的表格"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2、MySQL 中有哪些不同的表格？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("共有 5 种类型的表格：\n1、MyISAM\n2、Heap\n3、Merge\n4、INNODB\n5、ISAM\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_3、简述在-mysql-数据库中-myisam-和-innodb-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、简述在-mysql-数据库中-myisam-和-innodb-的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3、简述在 MySQL 数据库中 MyISAM 和 InnoDB 的区别")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("MyISAM：\n不支持事务，但是每次查询都是原子的；\n支持表级锁，即每次操作是对整个表加锁；\n存储表的总行数；\n一个 MYISAM 表有三个文件：索引文件、表结构文件、数据文件；\n采用菲聚集索引，索引文件的数据域存储指向数据文件的指针。辅索引与主索引\n基本一致，但是辅索引不用保证唯一性。\nInnoDb：\n支持 ACID 的事务，支持事务的四种隔离级别；\n支持行级锁及外键约束：因此可以支持写并发；\n不存储总行数：\n一个 InnoDb 引擎存储在一个文件空间（共享表空间，表大小不受操作系统控制，\n一个表可能分布在多个文件里），也有可能为多个（设置为独立表空，表大小受\n操作系统文件大小限制，一般为 2G），受操作系统文件大小的限制；\n主键索引采用聚集索引（索引的数据域存储数据文件本身），辅索引的数据域存\n储主键的值；因此从辅索引查找数据，需要先通过辅索引找到主键值，再访问辅\n索引；最好使用自增主键，防止插入数据时，为维持 B+树结构，文件的大调整。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"_4、mysql-中-innodb-支持的四种事务隔离级别名称-以及逐级之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、mysql-中-innodb-支持的四种事务隔离级别名称-以及逐级之间的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4、MySQL 中 InnoDB 支持的四种事务隔离级别名称，以及逐级之间的区别？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("SQL 标准定义的四个隔离级别为：\n1、read uncommited ：读到未提交数据\n2、read committed：脏读，不可重复读\n3、repeatable read：可重读\n4、serializable ：串行事物\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_5、char-和-varchar-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、char-和-varchar-的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5、CHAR 和 VARCHAR 的区别？")])]),s._v(" "),a("p",[s._v("1、CHAR 和 VARCHAR 类型在存储和检索方面有所不同")]),s._v(" "),a("p",[s._v("2、CHAR 列长度固定为创建表时声明的长度，长度值范围是 1 到 255 当 CHAR")]),s._v(" "),a("p",[s._v("值被存储时，它们被用空格填充到特定长度，检索 CHAR 值时需删除尾随空格。")]),s._v(" "),a("h2",{attrs:{id:"_6、主键和候选键有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、主键和候选键有什么区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6、主键和候选键有什么区别？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("表格的每一行都由主键唯一标识,一个表只有一个主键。\n主键也是候选键。按照惯例，候选键可以被指定为主键，并且可以用于任何外键\n引用\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_7、myisamchk-是用来做什么的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、myisamchk-是用来做什么的"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7、myisamchk 是用来做什么的？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("它用来压缩 MyISAM 表，这减少了磁盘或内存使用。\nMyISAM Static 和 MyISAM Dynamic 有什么区别？\n在 MyISAM Static 上的所有字段有固定宽度。动态 MyISAM 表将具有像 TEXT，\nBLOB 等字段，以适应不同长度的数据类型。\nMyISAM Static 在受损情况下更容易恢复。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_8、如果一个表有一列定义为-timestamp-将发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、如果一个表有一列定义为-timestamp-将发生什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8、如果一个表有一列定义为 TIMESTAMP，将发生什么？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("每当行被更改时，时间戳字段将获取当前时间戳。\n列设置为 AUTO INCREMENT 时，如果在表中达到最大值，会发生什么情况？\n它会停止递增，任何进一步的插入都将产生错误，因为密钥已被使用。\n怎样才能找出最后一次插入时分配了哪个自动增量？\nLAST_INSERT_ID 将返回由 Auto_increment 分配的最后一个值，并且不需要指\n定表名称。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_9、你怎么看到为表格定义的所有索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、你怎么看到为表格定义的所有索引"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9、你怎么看到为表格定义的所有索引？")])]),s._v(" "),a("p",[s._v("索引是通过以下方式为表格定义的：")]),s._v(" "),a("p",[s._v("SHOW INDEX FROM "),a("tablename",[s._v(";")])],1),s._v(" "),a("h2",{attrs:{id:"_10、like-声明中的-和-是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、like-声明中的-和-是什么意思"}},[s._v("#")]),s._v(" "),a("strong",[s._v("10、LIKE 声明中的％和_是什么意思？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("％对应于 0 个或更多字符，_只是 LIKE 语句中的一个字符。\n如何在 Unix 和 MySQL 时间戳之间进行转换？\nUNIX_TIMESTAMP 是从 MySQL 时间戳转换为 Unix 时间戳的命令\nFROM_UNIXTIME 是从 Unix 时间戳转换为 MySQL 时间戳的命令\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_11、列对比运算符是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、列对比运算符是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("11、列对比运算符是什么？")])]),s._v(" "),a("p",[s._v("在 SELECT 语句的列比较中使用=，<>，<=，<，> =，>，<<，>>，<=>，AND，")]),s._v(" "),a("p",[s._v("OR 或 LIKE 运算符。")]),s._v(" "),a("h2",{attrs:{id:"_12、blob-和-text-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、blob-和-text-有什么区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("12、BLOB 和 TEXT 有什么区别？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("BLOB 是一个二进制对象，可以容纳可变数量的数据。TEXT 是一个不区分大小写\n的 BLOB。\nBLOB 和 TEXT 类型之间的唯一区别在于对 BLOB 值进行排序和比较时区分大小\n写，对 TEXT 值不区分大小写。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_13、mysql-fetch-array-和-mysql-fetch-object-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、mysql-fetch-array-和-mysql-fetch-object-的区别是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("13、MySQL_fetch_array 和 MySQL_fetch_object 的区别是什么？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("以下是 MySQL_fetch_array 和 MySQL_fetch_object 的区别：\nMySQL_fetch_array（） – 将结果行作为关联数组或来自数据库的常规数组返回。\nMySQL_fetch_object – 从数据库返回结果行作为对象。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_14、myisam-表格将在哪里存储-并且还提供其存储格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、myisam-表格将在哪里存储-并且还提供其存储格式"}},[s._v("#")]),s._v(" "),a("strong",[s._v("14、MyISAM 表格将在哪里存储，并且还提供其存储格式？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("每个 MyISAM 表格以三种格式存储在磁盘上：\n·“.frm”文件存储表定义\n·数据文件具有“.MYD”（MYData）扩展名\n索引文件具有“.MYI”（MYIndex）扩展名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_15、mysql-如何优化-distinct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、mysql-如何优化-distinct"}},[s._v("#")]),s._v(" "),a("strong",[s._v("15、MySQL 如何优化 DISTINCT？")])]),s._v(" "),a("p",[s._v("DISTINCT 在所有列上转换为 GROUP BY，并与 ORDER BY 子句结合使用。")]),s._v(" "),a("p",[s._v("SELECT DISTINCT t1.a FROM t1,t2 where t1.a=t2.a;")]),s._v(" "),a("h2",{attrs:{id:"_16、如何显示前-50-行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、如何显示前-50-行"}},[s._v("#")]),s._v(" "),a("strong",[s._v("16、如何显示前 50 行？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("在 MySQL 中，使用以下代码查询显示前 50 行：\nSELECT*FROM LIMIT 0,50;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_17、可以使用多少列创建索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、可以使用多少列创建索引"}},[s._v("#")]),s._v(" "),a("strong",[s._v("17、可以使用多少列创建索引？")])]),s._v(" "),a("p",[s._v("任何标准表最多可以创建 16 个索引列。")]),s._v(" "),a("h2",{attrs:{id:"_18、now-和-current-date-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、now-和-current-date-有什么区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("18、NOW（）和 CURRENT_DATE（）有什么区别？")])]),s._v(" "),a("p",[s._v("NOW（）命令用于显示当前年份，月份，日期，小时，分钟和秒。")]),s._v(" "),a("p",[s._v("CURRENT_DATE（）仅显示当前年份，月份和日期。")]),s._v(" "),a("h2",{attrs:{id:"_19、什么是非标准字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、什么是非标准字符串类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("19、什么是非标准字符串类型？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、TINYTEXT\n2、TEXT\n3、MEDIUMTEXT\n4、LONGTEXT\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_20、什么是通用-sql-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、什么是通用-sql-函数"}},[s._v("#")]),s._v(" "),a("strong",[s._v("20、什么是通用 SQL 函数？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、CONCAT(A, B) – 连接两个字符串值以创建单个字符串输出。通常用于将两个\n或多个字段合并为一个字段。\n2、FORMAT(X, D)- 格式化数字 X 到 D 有效数字。\n3、CURRDATE(), CURRTIME()- 返回当前日期或时间。\n4、NOW（） – 将当前日期和时间作为一个值返回。\n5、MONTH（），DAY（），YEAR（），WEEK（），WEEKDAY（） – 从日期\n值中提取给定数据。\n6、HOUR（），MINUTE（），SECOND（） – 从时间值中提取给定数据。\n7、DATEDIFF（A，B） – 确定两个日期之间的差异，通常用于计算年龄\n8、SUBTIMES（A，B） – 确定两次之间的差异。\n9、FROMDAYS（INT） – 将整数天数转换为日期值。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"_21、mysql-支持事务吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21、mysql-支持事务吗"}},[s._v("#")]),s._v(" "),a("strong",[s._v("21、MySQL 支持事务吗？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("在缺省模式下，MySQL 是 autocommit 模式的，所有的数据库更新操作都会即时\n提交，所以在缺省情况下，MySQL 是不支持事务的。\n但是如果你的 MySQL 表类型是使用 InnoDB Tables 或 BDB tables 的话，你的\nMySQL 就可以使用事务处理,使用 SET\nAUTOCOMMIT=0 就可以使 MySQL 允许在非 autocommit 模式，在非\nautocommit 模式下，你必须使用 COMMIT 来提交你的更改，或者用 ROLLBACK\n来回滚你的更改。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"_22、mysql-里记录货币用什么字段类型好"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22、mysql-里记录货币用什么字段类型好"}},[s._v("#")]),s._v(" "),a("strong",[s._v("22、MySQL 里记录货币用什么字段类型好")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("NUMERIC 和 DECIMAL 类型被 MySQL 实现为同样的类型，这在 SQL92 标准允\n许。他们被用于保存值，该值的准确精度是极其重要的值，例如与金钱有关的数\n据。当声明一个类是这些类型之一时，精度和规模的能被(并且通常是)指定。\n例如：\nsalary DECIMAL(9,2)\n在这个例子中，9(precision)代表将被用于存储值的总的小数位数，而 2(scale)代\n表将被用于存储小数点后的位数。\n因此，在这种情况下，能被存储在 salary 列中的值的范围是从-9999999.99 到\n9999999.99。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_23、mysql-有关权限的表都有哪几个"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23、mysql-有关权限的表都有哪几个"}},[s._v("#")]),s._v(" "),a("strong",[s._v("23、MySQL 有关权限的表都有哪几个？")])]),s._v(" "),a("p",[s._v("MySQL 服务器通过权限表来控制用户对数据库的访问，权限表存放在 MySQL 数")]),s._v(" "),a("p",[s._v("据库里，由 MySQL_install_db 脚本初始化。这些权限表分别 user，db，table_priv，")]),s._v(" "),a("p",[s._v("columns_priv 和 host。")]),s._v(" "),a("h2",{attrs:{id:"_24、列的字符串类型可以是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24、列的字符串类型可以是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("24、列的字符串类型可以是什么？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("字符串类型是：\n1、SET\n2、BLOB\n3、ENUM\n4、CHAR\n5、TEXT\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_25、mysql-数据库作发布系统的存储-一天五万条以上的增量-预计运维三年-怎么优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25、mysql-数据库作发布系统的存储-一天五万条以上的增量-预计运维三年-怎么优化"}},[s._v("#")]),s._v(" "),a("strong",[s._v("25、MySQL 数据库作发布系统的存储，一天五万条以上的增量，预计运维三年,怎么优化？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、设计良好的数据库结构，允许部分数据冗余，尽量避免 join 查询，提高效率。\n2、选择合适的表字段数据类型和存储引擎，适当的添加索引。\n3、MySQL 库主从读写分离。\n4、找规律分表，减少单表中的数据量提高查询速度。\n5、添加缓存机制，比如 memcached，apc 等。\n6、不经常改动的页面，生成静态页面。\n7、书写高效率的 SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1,\nfield_2, field_3 FROM TABLE.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_26、锁的优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26、锁的优化策略"}},[s._v("#")]),s._v(" "),a("strong",[s._v("26、锁的优化策略")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、读写分离\n2、分段加锁\n3、减少锁持有的时间\n4.多个线程尽量以相同的顺序去获取资源\n不能将锁的粒度过于细化，不然可能会出现线程的加锁和释放次数过多，反而效\n率不如一次加一把大锁。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_27、索引的底层实现原理和优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27、索引的底层实现原理和优化"}},[s._v("#")]),s._v(" "),a("strong",[s._v("27、索引的底层实现原理和优化")])]),s._v(" "),a("p",[s._v("B+树，经过优化的 B+树")]),s._v(" "),a("p",[s._v("主要是在所有的叶子结点中增加了指向下一个叶子节点的指针，因此 InnoDB 建")]),s._v(" "),a("p",[s._v("议为大部分表使用默认自增的主键作为主索引。")]),s._v(" "),a("h2",{attrs:{id:"_28、什么情况下设置了索引但无法使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28、什么情况下设置了索引但无法使用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("28、什么情况下设置了索引但无法使用")])]),s._v(" "),a("p",[s._v("1、以“%”开头的 LIKE 语句，模糊匹配")]),s._v(" "),a("p",[s._v("2、OR 语句前后没有同时使用索引")]),s._v(" "),a("p",[s._v("3、数据类型出现隐式转化（如 varchar 不加单引号的话可能会自动转换为 int 型）")]),s._v(" "),a("h2",{attrs:{id:"_29、实践中如何优化-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29、实践中如何优化-mysql"}},[s._v("#")]),s._v(" "),a("strong",[s._v("29、实践中如何优化 MySQL")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("最好是按照以下顺序优化：\n1、SQL 语句及索引的优化\n2、数据库表结构的优化\n3、系统配置的优化\n4、硬件的优化\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_30、优化数据库的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30、优化数据库的方法"}},[s._v("#")]),s._v(" "),a("strong",[s._v("30、优化数据库的方法")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、选取最适用的字段属性，尽可能减少定义字段宽度，尽量把字段设置 NOTNULL，\n例如’省份’、’性别’最好适用 ENUM\n2、使用连接(JOIN)来代替子查询\n3、适用联合(UNION)来代替手动创建的临时表\n4、事务处理\n5、锁定表、优化事务处理\n6、适用外键，优化锁定表\n7、建立索引\n8、优化查询语句\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_31、简单描述-mysql-中-索引-主键-唯一索引-联合索引的区别-对数据库的性能有什么影响-从读写两方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_31、简单描述-mysql-中-索引-主键-唯一索引-联合索引的区别-对数据库的性能有什么影响-从读写两方面"}},[s._v("#")]),s._v(" "),a("strong",[s._v("31、简单描述 MySQL 中，索引，主键，唯一索引，联合索引的区别，对数据库的性能有什么影响（从读写两方面）")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("索引是一种特殊的文件(InnoDB 数据表上的索引是表空间的一个组成部分)，它们\n包含着对数据表里所有记录的引用指针。\n普通索引(由关键字 KEY 或 INDEX 定义的索引)的唯一任务是加快对数据的访问速\n度。\n普通索引允许被索引的数据列包含重复的值。如果能确定某个数据列将只包含彼\n此各不相同的值，在为这个数据列创建索引的时候就应该用关键字 UNIQUE 把它\n定义为一个唯一索引。也就是说，唯一索引可以保证数据记录的唯一性。\n主键，是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯\n一标识一条记录，使用关键字 PRIMARY KEY 来创建。\n索引可以覆盖多个数据列，如像 INDEX(columnA, columnB)索引，这就是联合索\n引。\n索引可以极大的提高数据的查询速度，但是会降低插入、删除、更新表的速度，\n因为在执行这些写操作时，还要操作索引文件。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_32、数据库中的事务是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_32、数据库中的事务是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("32、数据库中的事务是什么?")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("事务（transaction）是作为一个单元的一组有序的数据库操作。如果组中的所有\n操作都成功，则认为事务成功，即使只有一个操作失败，事务也不成功。如果所\n有操作完成，事务则提交，其修改将作用于所有其他数据库进程。如果一个操作\n失败，则事务将回滚，该事务所有操作的影响都将取消。\n事务特性：\n1、原子性：即不可分割性，事务要么全部被执行，要么就全部不被执行。\n2、一致性或可串性。事务的执行使得数据库从一种正确状态转换成另一种正确状\n态\n3、隔离性。在事务正确提交之前，不允许把该事务对数据的任何改变提供给任何\n其他事务，\n4、持久性。事务正确提交后，其结果将永久保存在数据库中，即使在事务提交后\n有了其他故障，事务的处理结果也会得到保存。\n或者这样理解：\n事务就是被绑定在一起作为一个逻辑工作单元的 SQL 语句分组，如果任何一个语\n句操作失败那么整个操作就被失败，以后操作就会回滚到操作前状态，或者是上\n有个节点。为了确保要么执行，要么不执行，就可以使用事务。要将有组语句作\n为事务考虑，就需要通过 ACID 测试，即原子性，一致性，隔离性和持久性。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"_33、sql-注入漏洞产生的原因-如何防止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_33、sql-注入漏洞产生的原因-如何防止"}},[s._v("#")]),s._v(" "),a("strong",[s._v("33、SQL 注入漏洞产生的原因？如何防止？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("SQL 注入产生的原因：程序开发过程中不注意规范书写 sql 语句和对特殊字符进\n行过滤，导致客户端可以通过全局变量 POST 和 GET 提交一些 sql 语句正常执行。\n防止 SQL 注入的方式：\n开启配置文件中的 magic_quotes_gpc 和 magic_quotes_runtime 设置\n执行 sql 语句时使用 addslashes 进行 sql 语句转换\nSql 语句书写尽量不要省略双引号和单引号。\n过滤掉 sql 语句中的一些关键词：update、insert、delete、select、 * 。\n提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不\n易被猜到的。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_34、为表中得字段选择合适得数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_34、为表中得字段选择合适得数据类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("34、为表中得字段选择合适得数据类型")])]),s._v(" "),a("p",[s._v("字段类型优先级: 整形>date,time>enum,char>varchar>blob,text")]),s._v(" "),a("p",[s._v("优先考虑数字类型，其次是日期或者二进制类型，最后是字符串类型，同级别得")]),s._v(" "),a("p",[s._v("数据类型，应该优先选择占用空间小的数据类型")]),s._v(" "),a("h2",{attrs:{id:"_35、存储时期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35、存储时期"}},[s._v("#")]),s._v(" "),a("strong",[s._v("35、存储时期")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("Datatime:以 YYYY-MM-DD HH:MM:SS 格式存储时期时间，精确到秒，\n占用 8 个字节得存储空间，datatime 类型与时区无关\nTimestamp:以时间戳格式存储，占用 4 个字节，范围小 1970-1-1 到 2038-1-19，\n显示依赖于所指定得时区，默认在第一个列行的数据修改时可以自动得修改\ntimestamp 列得值\nDate:（生日）占用得字节数比使用字符串.datatime.int 储存要少，使用 date 只\n需要 3 个字节，存储日期月份，还可以利用日期时间函数进行日期间得计算\nTime:存储时间部分得数据\n注意:不要使用字符串类型来存储日期时间数据（通常比字符串占用得储存空间小，\n在进行查找过滤可以利用日期得函数）\n使用 int 存储日期时间不如使用 timestamp 类型\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"_36、对于关系型数据库而言-索引是相当重要的概念-请回答有关索引的几个问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_36、对于关系型数据库而言-索引是相当重要的概念-请回答有关索引的几个问题"}},[s._v("#")]),s._v(" "),a("strong",[s._v("36、对于关系型数据库而言，索引是相当重要的概念，请回答有关索引的几个问题")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、索引的目的是什么？\n快速访问数据表中的特定信息，提高检索速度\n创建唯一性索引，保证数据库表中每一行数据的唯一性。\n加速表和表之间的连接\n使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间\n2、索引对数据库系统的负面影响是什么？\n负面影响：\n创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需\n要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；\n当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速\n度。\n3、为数据表建立索引的原则有哪些？\n在最频繁使用的、用以缩小查询范围的字段上建立索引。\n在频繁使用的、需要排序的字段上建立索引\n4、什么情况下不宜建立索引？\n对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。\n对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"_37、解释-mysql-外连接、内连接与自连接的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_37、解释-mysql-外连接、内连接与自连接的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("37、解释 MySQL 外连接、内连接与自连接的区别")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("先说什么是交叉连接: 交叉连接又叫笛卡尔积，它是指不使用任何条件，直接将一\n个表的所有记录和另一个表中的所有记录一一匹配。\n内连接 则是只有条件的交叉连接，根据某个条件筛选出符合条件的记录，不符合\n条件的记录不会出现在结果集中，即内连接只连接匹配的行。\n外连接 其结果集中不仅包含符合连接条件的行，而且还会包括左表、右表或两个\n表中\n的所有数据行，这三种情况依次称之为左外连接，右外连接，和全外连接。\n左外连接，也称左连接，左表为主表，左表中的所有记录都会出现在结果集中，\n对于那些在右表中并没有匹配的记录，仍然要显示，右边对应的那些字段值以\nNULL 来填充。右外连接，也称右连接，右表为主表，右表中的所有记录都会出现\n在结果集中。左连接和右连接可以互换，MySQL 目前还不支持全外连接。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"_38、myql-中的事务回滚机制概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_38、myql-中的事务回滚机制概述"}},[s._v("#")]),s._v(" "),a("strong",[s._v("38、Myql 中的事务回滚机制概述")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("事务是用户定义的一个数据库操作序列，这些操作要么全做要么全不做，是一个\n不可分割的工作单位，事务回滚是指将该事务已经完成的对数据库的更新操作撤\n销。\n要同时修改数据库中两个不同表时，如果它们不是一个事务的话，当第一个表修\n改完，可能第二个表修改过程中出现了异常而没能修改，此时就只有第二个表依\n旧是未修改之前的状态，而第一个表已经被修改完毕。而当你把它们设定为一个\n事务的时候，当第一个表修改完，第二表修改出现异常而没能修改，第一个表和\n第二个表都要回到未修改的状态，这就是所谓的事务回滚\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_39、sql-语言包括哪几部分-每部分都有哪些操作关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_39、sql-语言包括哪几部分-每部分都有哪些操作关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("39、SQL 语言包括哪几部分？每部分都有哪些操作关键字？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("SQL 语言包括数据定义(DDL)、数据操纵(DML),数据控制(DCL)和数据查询（DQL）\n四个部分。\n数据定义：Create Table,Alter Table,Drop Table, Craete/Drop Index 等\n数据操纵：Select ,insert,update,delete,\n数据控制：grant,revoke\n数据查询：select\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_40、完整性约束包括哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_40、完整性约束包括哪些"}},[s._v("#")]),s._v(" "),a("strong",[s._v("40、完整性约束包括哪些？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("数据完整性(Data Integrity)是指数据的精确(Accuracy)和可靠性(Reliability)。\n分为以下四类：\n1、实体完整性：规定表的每一行在表中是惟一的实体。\n2、域完整性：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括\n取值范围、精度等规定。\n3、参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间\n的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。\n4、用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需\n要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束\n条件，它反映某一具体应用必须满足的语义要求。\n与表有关的约束：包括列约束(NOT NULL（非空约束）)和表约束(PRIMARY KEY、\nforeign key、check、UNIQUE) 。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"_41、什么是锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_41、什么是锁"}},[s._v("#")]),s._v(" "),a("strong",[s._v("41、什么是锁？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("答：数据库是一个多用户使用的共享资源。当多个用户并发地存取数据时，在数\n据库中就会产生多个事务同时存取同一数据的情况。若对并发操作不加控制就可\n能会读取和存储不正确的数据，破坏数据库的一致性。\n加锁是实现数据库并发控制的一个非常重要的技术。当事务在对某个数据对象进\n行操作前，先向系统发出请求，对其加锁。加锁后事务就对该数据对象有了一定\n的控制，在该事务释放锁之前，其他的事务不能对此数据对象进行更新操作。\n基本锁类型：锁包括行级锁和表级锁\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"_42、什么叫视图-游标是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_42、什么叫视图-游标是什么"}},[s._v("#")]),s._v(" "),a("strong",[s._v("42、什么叫视图？游标是什么？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("答：视图是一种虚拟的表，具有和物理表相同的功能。可以对视图进行增，改，\n查，操作，视图通常是有一个表或者多个表的行或列的子集。对视图的修改不影\n响基本表。它使得我们获取数据更容易，相比多表查询。\n游标：是对查询出来的结果集作为一个单元来有效的处理。游标可以定在该单元\n中的特定行，从结果集的当前行检索一行或多行。可以对结果集当前行做修改。\n一般不使用游标，但是需要逐条处理数据的时候，游标显得十分重要。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_43、什么是存储过程-用什么来调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_43、什么是存储过程-用什么来调用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("43、什么是存储过程？用什么来调用？")])]),s._v(" "),a("p",[s._v("答：存储过程是一个预编译的 SQL 语句，优点是允许模块化的设计，就是说只需")]),s._v(" "),a("p",[s._v("创建一次，以后在该程序中就可以调用多次。如果某次操作需要执行多次 SQL，")]),s._v(" "),a("p",[s._v("使用存储过程比单纯 SQL 语句执行要快。可以用一个命令对象来调用存储过程。")]),s._v(" "),a("h2",{attrs:{id:"_44、如何通俗地理解三个范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_44、如何通俗地理解三个范式"}},[s._v("#")]),s._v(" "),a("strong",[s._v("44、如何通俗地理解三个范式？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("答：第一范式：1NF 是对属性的原子性约束，要求属性具有原子性，不可再分解；\n第二范式：2NF 是对记录的惟一性约束，要求记录有惟一标识，即实体的惟一性；\n第三范式：3NF 是对字段冗余性的约束，即任何字段不能由其他字段派生出来，\n它要求字段没有冗余。。\n范式化设计优缺点:\n优点:\n可以尽量得减少数据冗余，使得更新快，体积小\n缺点:对于查询需要多个表进行关联，减少写得效率增加读得效率，更难进行索引\n优化\n反范式化:\n优点:可以减少表得关联，可以更好得进行索引优化\n缺点:数据冗余以及数据异常，数据得修改需要更多的成本\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"_45、什么是基本表-什么是视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_45、什么是基本表-什么是视图"}},[s._v("#")]),s._v(" "),a("strong",[s._v("45、什么是基本表？什么是视图？")])]),s._v(" "),a("p",[s._v("答：基本表是本身独立存在的表，在 SQL 中一个关系就对应一个表。 视图是从")]),s._v(" "),a("p",[s._v("一个或几个基本表导出的表。视图本身不独立存储在数据库中，是一个虚表")]),s._v(" "),a("h2",{attrs:{id:"_46、试述视图的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_46、试述视图的优点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("46、试述视图的优点？")])]),s._v(" "),a("p",[s._v("答：(1) 视图能够简化用户的操作 (2) 视图使用户能以多种角度看待同一数据；")]),s._v(" "),a("p",[s._v("(3) 视图为数据库提供了一定程度的逻辑独立性； (4) 视图能够对机密数据提供")]),s._v(" "),a("p",[s._v("安全保护。")]),s._v(" "),a("h2",{attrs:{id:"_47、-null-是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_47、-null-是什么意思"}},[s._v("#")]),s._v(" "),a("strong",[s._v("47、 NULL 是什么意思")])]),s._v(" "),a("p",[s._v("答：NULL 这个值表示 UNKNOWN(未知):它不表示“”(空字符串)。对 NULL 这")]),s._v(" "),a("p",[s._v("个值的任何比较都会生产一个 NULL 值。您不能把任何值与一个 NULL 值进行比")]),s._v(" "),a("p",[s._v("较，并在逻辑上希望获得一个答案。")]),s._v(" "),a("p",[s._v("使用 IS NULL 来进行 NULL 判断")]),s._v(" "),a("h2",{attrs:{id:"_48、主键、外键和索引的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_48、主键、外键和索引的区别"}},[s._v("#")]),s._v(" "),a("strong",[s._v("48、主键、外键和索引的区别？")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("主键、外键和索引的区别\n定义：\n主键–唯一标识一条记录，不能有重复的，不允许为空\n外键–表的外键是另一表的主键, 外键可以有重复的, 可以是空值\n索引–该字段没有重复值，但可以有一个空值\n作用：\n主键–用来保证数据完整性\n外键–用来和其他表建立联系用的\n索引–是提高查询排序的速度\n个数：\n主键–主键只能有一个\n外键–一个表可以有多个外键\n索引–一个表可以有多个唯一索引\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_49、你可以用什么来确保表格里的字段只接受特定范围里的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_49、你可以用什么来确保表格里的字段只接受特定范围里的值"}},[s._v("#")]),s._v(" "),a("strong",[s._v("49、你可以用什么来确保表格里的字段只接受特定范围里的值?")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("答：Check 限制，它在数据库表格里被定义，用来限制输入该列的值。\n触发器也可以被用来限制数据库表格里的字段能够接受的值，但是这种办法要求\n触发器在表格里被定义，这可能会在某些情况下影响到性能。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"_50、说说对-sql-语句优化有哪些方法-选择几条"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_50、说说对-sql-语句优化有哪些方法-选择几条"}},[s._v("#")]),s._v(" "),a("strong",[s._v("50、说说对 SQL 语句优化有哪些方法？（选择几条）")])]),s._v(" "),a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[s._v("1、Where 子句中：where 表之间的连接必须写在其他 Where 条件之前，那些可\n以过滤掉最大数量记录的条件必须写在 Where 子句的末尾.HAVING 最后。\n2、用 EXISTS 替代 IN、用 NOT EXISTS 替代 NOT IN。\n3、 避免在索引列上使用计算\n4、避免在索引列上使用 IS NULL 和 IS NOT NULL\n5、对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉\n及的列上建立索引。\n6、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃\n使用索引而进行全表扫描\n7、应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用\n索引而进行全表扫描\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);