(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{485:function(v,s,_){"use strict";_.r(s);var r=_(1),e=Object(r.a)({},(function(){var v=this,s=v._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"redis主从复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis主从复制"}},[v._v("#")]),v._v(" "),s("strong",[v._v("Redis主从复制")])]),v._v(" "),s("h3",{attrs:{id:"_1-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-是什么"}},[v._v("#")]),v._v(" 1.是什么")]),v._v(" "),s("p",[v._v("1.单机有什么问题：")]),v._v(" "),s("p",[v._v("单机故障")]),v._v(" "),s("p",[v._v("容量瓶颈")]),v._v(" "),s("p",[v._v("qps瓶颈")]),v._v(" "),s("p",[v._v("主机数据更新后根据配置和策略，自动同步到备机的master/slaver机制，mester已写为主，slaver已读为主")]),v._v(" "),s("h3",{attrs:{id:"_2-能干嘛"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-能干嘛"}},[v._v("#")]),v._v(" 2.能干嘛")]),v._v(" "),s("p",[v._v("1.读写分离")]),v._v(" "),s("p",[v._v("2.容灾备份")]),v._v(" "),s("h3",{attrs:{id:"_3-怎么玩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-怎么玩"}},[v._v("#")]),v._v(" 3.怎么玩")]),v._v(" "),s("p",[v._v("玩法原则:")]),v._v(" "),s("p",[v._v("1.配从不配主")]),v._v(" "),s("p",[v._v("2.使用命令 SLAVEOF 动态指定主从关系  ，如果设置了密码，关联后使用 config set masterauth 密码")]),v._v(" "),s("p",[v._v("3.配置文件和命令混合使用时，如果混合使用，动态指定了主从，请注意一定要修改对应的配置文件")]),v._v(" "),s("p",[v._v("1.新建redis8000,redis8001,redis8002文件夹")]),v._v(" "),s("p",[v._v("2.将redis.conf文件复制在redis8000下")]),v._v(" "),s("p",[v._v("3.分别修改个目录下的redis.conf文件")]),v._v(" "),s("p",[v._v("​\tredis8000/redis.conf")]),v._v(" "),s("p",[v._v("​\t1.bind 192.168.0.104  指定本机ip")]),v._v(" "),s("p",[v._v("​\t2.port 8000")]),v._v(" "),s("p",[v._v("​\t3.daemonize yes")]),v._v(" "),s("p",[v._v("​\t4.pidfile /var/run/redis_8000.pid")]),v._v(" "),s("p",[v._v("​\t5.dir /myredis/redis8000")]),v._v(" "),s("p",[v._v("​\t6.requirepass 123456")]),v._v(" "),s("p",[v._v("4.把redis8000/redis.conf文件复制到redis8001,redis8002下")]),v._v(" "),s("p",[v._v("​\tredis8001/redis.conf")]),v._v(" "),s("p",[v._v("​\t1.  :%s/8000/8001/g   批量替换")]),v._v(" "),s("p",[v._v("​\t2.  replicaof 192.168.0.104 8000")]),v._v(" "),s("p",[v._v("​\t3.  masterauth 123456")]),v._v(" "),s("p",[v._v("​\tredis8002/redis.conf")]),v._v(" "),s("div",{staticClass:"language-plain line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[v._v("1.  :%s/8000/8002/g    批量替换\n \t2.  replicaof 192.168.0.104 8000\n \t3.  masterauth 123456\n")])]),v._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[v._v("1")]),s("br"),s("span",{staticClass:"line-number"},[v._v("2")]),s("br"),s("span",{staticClass:"line-number"},[v._v("3")]),s("br")])]),s("p",[v._v("5.分别启动8000.8001,8002实例")]),v._v(" "),s("p",[v._v("[root@localhost  myredis]# /usr/local/bin/redis-server /myredis/redis8000/redis.conf")]),v._v(" "),s("p",[v._v("[root@localhost  myredis]# /usr/local/bin/redis-server /myredis/redis8001/redis.conf")]),v._v(" "),s("p",[v._v("[root@localhost  myredis]# /usr/local/bin/redis-server /myredis/redis8002/redis.conf")]),v._v(" "),s("p",[v._v("6.客户端连接")]),v._v(" "),s("p",[v._v("/usr/local/bin/redis-cli -h 192.168.0.104 -p 8000 -a 123456")]),v._v(" "),s("p",[v._v("/usr/local/bin/redis-cli -h 192.168.0.104 -p 8001 -a 123456")]),v._v(" "),s("p",[v._v("/usr/local/bin/redis-cli -h 192.168.0.104 -p 8002 -a 123456")]),v._v(" "),s("h3",{attrs:{id:"工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[v._v("#")]),v._v(" 工作流程")]),v._v(" "),s("h3",{attrs:{id:"总体分为大三步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总体分为大三步"}},[v._v("#")]),v._v(" 总体分为大三步：")]),v._v(" "),s("p",[s("strong",[v._v("建立连接")])]),v._v(" "),s("p",[v._v("1.设置master的地址和端口，发送slaveof ip port指令，master会返回响应客户端，根据响应信息保存master ip  port信息 (连接测试)")]),v._v(" "),s("p",[v._v("2.根据保存的信息创建连接master的socket")]),v._v(" "),s("p",[v._v("3.周期性发送ping，master会响应pong")]),v._v(" "),s("p",[v._v("4.发送指令 auth password（身份验证），master验证身份")]),v._v(" "),s("p",[v._v("5.发送slave端口信息，master保存slave的端口号")]),v._v(" "),s("p",[s("strong",[v._v("数据同步")])]),v._v(" "),s("p",[v._v("1.slave发送指令 psyn2")]),v._v(" "),s("p",[v._v("2.master 执行bgsave")]),v._v(" "),s("p",[v._v("3.在第一个salve连接时，创建命令缓存区")]),v._v(" "),s("p",[v._v("4.生成RDB文件，通过socket发送给slave")]),v._v(" "),s("p",[v._v("5.slave接收RDB，清空数据，执行RDB文件恢复过程")]),v._v(" "),s("p",[v._v("6.发送命令告知RDB恢复已经完成（告知全量复制完成）")]),v._v(" "),s("p",[v._v("7.master发送复制缓冲区信息")]),v._v(" "),s("p",[v._v("8.slave接收信息，执行重写后恢复数据")]),v._v(" "),s("p",[s("strong",[v._v("注意：")]),v._v(" master会保存slave从我这里拿走了多少数据，保存salve的偏移量")]),v._v(" "),s("p",[s("strong",[v._v("命令传播")])]),v._v(" "),s("p",[v._v("slave心跳：replconf   ack   {offset}   汇报slave自己的offset，获取最新数据指令")]),v._v(" "),s("p",[v._v("命令传播阶段出现断网：")]),v._v(" "),s("ul",[s("li",[v._v("网络闪断闪连   忽略")]),v._v(" "),s("li",[v._v("段时间断网   增量")]),v._v(" "),s("li",[v._v("长时间断网   全量")])]),v._v(" "),s("p",[v._v("全量复制核心三个要素")]),v._v(" "),s("ol",[s("li",[v._v("服务器运行id\n用于服务器之间通信验证身份，master首次连接slave时，会将自己的run_id发送给slave，slave保存此ID")]),v._v(" "),s("li",[v._v("主服务器积压的命令缓冲区\n先进先出队列")]),v._v(" "),s("li",[v._v("主从服务器的复制偏移量\n用于比对偏移量，然后判断出执行全量还是增量")])]),v._v(" "),s("h3",{attrs:{id:"_4-全量复制消耗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-全量复制消耗"}},[v._v("#")]),v._v(" 4.全量复制消耗")]),v._v(" "),s("p",[v._v("1.bgsave时间")]),v._v(" "),s("p",[v._v("2.rdb文件网络传输")]),v._v(" "),s("p",[v._v("3.从节点请求请求数据时间")]),v._v(" "),s("p",[v._v("4.从节点加载rdb的时间")]),v._v(" "),s("p",[v._v("5.可能的aof重写时间")]),v._v(" "),s("h3",{attrs:{id:"_5-缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-缺点"}},[v._v("#")]),v._v(" 5.缺点")]),v._v(" "),s("p",[v._v("1.由于所有的写操作都是先在Master上操作，然后同步更新到Slave上，所以从Master同步到Slave机器有一定的延迟，当系统很繁忙的时候，延迟问题会更加严重，Slave机器数量的增加也会使这个问题更加严重。")]),v._v(" "),s("p",[v._v("2.当主机宕机之后，将不能进行写操作，需要手动将从机升级为主机，从机需要重新制定master")]),v._v(" "),s("p",[v._v("简单总结：")]),v._v(" "),s("p",[v._v("一个master可以有多个Slave")]),v._v(" "),s("p",[v._v("一个slave只能有一个master")]),v._v(" "),s("p",[v._v("数据流向是单向的，只能从主到从")])])}),[],!1,null,null,null);s.default=e.exports}}]);