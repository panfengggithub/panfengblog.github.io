(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{663:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("strong",[t._v("概要：")])]),t._v(" "),s("ol",[s("li",[t._v("Nginx 反向代理与负载均衡")]),t._v(" "),s("li",[t._v("Nginx 实现高速缓存")]),t._v(" "),s("li",[t._v("Nginx 性能参数调优")])]),t._v(" "),s("h2",{attrs:{id:"一、nginx-反向代理实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、nginx-反向代理实现"}},[t._v("#")]),t._v(" 一、Nginx 反向代理实现")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("反向代理基本配置")])]),t._v(" "),s("li",[s("p",[t._v("负载均衡配置与参数解析")])]),t._v(" "),s("li",[s("p",[t._v("负载均衡算法详解")])]),t._v(" "),s("li",[s("p",[t._v("反向代理基本配置")])])]),t._v(" "),s("p",[t._v("提问：什么是反向代理其与正向代理有什么区别？\n"),s("strong",[t._v("正向代理的概念：")]),t._v("\n正向代理是指客户端与目标服务器之间增加一个代理服务器，客户端直接访问代理服务器，在由代理服务器访问目标服务器并返回客户端并返回 。这个过程当中客户端需要知道代理服务器地址，并配置连接。\n"),s("img",{attrs:{src:"https://images-cdn.shimo.im/Toh3jB1uHeodiycl/image.png!thumbnail",alt:"图片"}})]),t._v(" "),s("p",[s("strong",[t._v("反向代理的概念：")]),t._v("\n反向代理是指 客户端访问目标服务器，在目标服务内部有一个统一接入网关将请求转发至后端真正处理的服务器并返回结果。这个过程当中客户端不需要知道代理服务器地址，代理对客户端而言是透明的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/i8oQuJikm9EREsxz/image.png!thumbnail",alt:"图片"}})]),t._v(" "),s("p",[s("strong",[t._v("反向代理与正向代理的区别")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}}),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("正向代理")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("反向代理")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("代理服务器位置")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("客户端与服务都能连接的们位置")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("目标服务器内部")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("主要作用")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("屏蔽客户端IP、集中式缓存、解决客户端不能直连服务端的问题。")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("屏蔽服务端内部实现、负载均衡、缓存。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("应用场景")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("爬虫、翻墙、maven 的nexus 服务")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Nginx 、Apache负载均衡应用")])])])]),t._v(" "),s("p",[s("strong",[t._v("Nginx代理基本配置")]),t._v("\nNginx 代理只需要配置 location 中配置proxy_pass 属性即可。其指向代理的服务器地址。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 正向代理到baidu 服务\nlocation = /baidu.html {\n         proxy_pass http://www.baidu.com;\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 反向代理至 本机的8010服务\nlocation /luban/ {\n     proxy_pass http://127.0.0.1:8010;  \n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("代理相关参数：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("proxy_pass           # 代理服务\nproxy_redirect off;   # 是否允许重定向\nproxy_set_header Host $host; # 传 header 参数至后端服务\nproxy_set_header X-Forwarded-For $remote_addr; # 设置request header 即客户端IP 地址\nproxy_connect_timeout 90; # 连接代理服务超时时间\nproxy_send_timeout 90; # 请求发送最大时间\nproxy_read_timeout 90;  # 读取最大时间\nproxy_buffer_size 4k; \nproxy_buffers 4 32k;\nproxy_busy_buffers_size 64k; \nproxy_temp_file_write_size 64k;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_2-负载均衡配置与参数解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-负载均衡配置与参数解析"}},[t._v("#")]),t._v(" 2.负载均衡配置与参数解析")]),t._v(" "),s("p",[t._v("通过proxy_pass 可以把请求代理至后端服务，但是为了实现更高的负载及性能， 我们的后端服务通常是多个， 这个是时候可以通过upstream 模块实现负载均衡。")]),t._v(" "),s("p",[s("strong",[t._v("演示upstream 的实现。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("upstream backend {     \n   server 127.0.0.1:8010 weight=1;\n   server 127.0.0.1:8080 weight=2;\n}\nlocation / {\n          proxy_pass http://backend;\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("upstream 相关参数:")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("service")]),t._v("\t反向服务地址 加端口")]),t._v(" "),s("li",[t._v("**weight\t**权重")]),t._v(" "),s("li",[t._v("**max_fails\t**失败多少次 认为主机已挂掉则，踢出")]),t._v(" "),s("li",[t._v("**fail_timeout\t**踢出后重新探测时间")]),t._v(" "),s("li",[t._v("**backup\t**备用服务")]),t._v(" "),s("li",[t._v("**max_conns\t**允许最大连接数")]),t._v(" "),s("li",[t._v("**slow_start\t**当节点恢复，不立即加入,而是等待 slow_start\t后加入服务对列。")])]),t._v(" "),s("h3",{attrs:{id:"_3-upstream-负载均衡算法介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-upstream-负载均衡算法介绍"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3.upstream 负载均衡算法介绍")])]),t._v(" "),s("ul",[s("li",[t._v("**ll+weight： **轮询加权重 (默认)")]),t._v(" "),s("li",[t._v("**ip_hash : **基于Hash 计算 ,用于保持session 一至性")]),t._v(" "),s("li",[s("strong",[t._v("url_hash:")]),t._v(" 静态资源缓存,节约存储，加快速度（第三方）")]),t._v(" "),s("li",[t._v("**least_conn **：最少链接（第三方）")]),t._v(" "),s("li",[t._v("**least_time  **：最小的响应时间,计算节点平均响应时间，然后取响应最快的那个，分配更高权重（第三方）")])]),t._v(" "),s("h2",{attrs:{id:"二、nginx-高速缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、nginx-高速缓存"}},[t._v("#")]),t._v(" 二、Nginx 高速缓存")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"知识点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识点-2"}},[t._v("#")]),t._v(" 知识点：")]),t._v(" "),s("ol",[s("li",[t._v("缓存案例分析")]),t._v(" "),s("li",[t._v("Nginx 静态缓存基本配置")]),t._v(" "),s("li",[t._v("缓存更新")])]),t._v(" "),s("h3",{attrs:{id:"_1、案例分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、案例分析"}},[t._v("#")]),t._v(" "),s("strong",[t._v("1、案例分析：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("某电商平台商品详情页需要实现 700+ QPS，如何着手去做？\n")])])]),s("ol",[s("li",[t._v("首先为分析一下一个商品详情页有哪些信息")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/TZUrMwnBANsugooe/image.png!thumbnail",alt:"图片"}})]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("从中得出 商品详情页依懒了\n")])])]),s("p",[t._v("**对于商品详情页涉及了如下主要服务： **")]),t._v(" "),s("ul",[s("li",[t._v("商品详情页HTML页面渲染")]),t._v(" "),s("li",[t._v("价格服务")]),t._v(" "),s("li",[t._v("促销服务")]),t._v(" "),s("li",[t._v("库存状态/配送至服务")]),t._v(" "),s("li",[t._v("广告词服务")]),t._v(" "),s("li",[t._v("预售/秒杀服务")]),t._v(" "),s("li",[t._v("评价服务")]),t._v(" "),s("li",[t._v("试用服务")]),t._v(" "),s("li",[t._v("推荐服务")]),t._v(" "),s("li",[t._v("商品介绍服务")]),t._v(" "),s("li",[t._v("各品类相关的一些特殊服务")])]),t._v(" "),s("p",[s("strong",[t._v("解决方案：")])]),t._v(" "),s("ol",[s("li",[t._v("采用Ajax 动态加载 价格、广告、库存等服务")]),t._v(" "),s("li",[t._v("采用key value 缓存详情页主体html。")])]),t._v(" "),s("p",[t._v("方案架构：\n"),s("img",{attrs:{src:"https://images-cdn.shimo.im/TdjQJiWestQWQsbP/image.png!thumbnail",alt:"图片"}})]),t._v(" "),s("p",[s("strong",[t._v("问题：")]),t._v("\n当达到500QPS 的时候很难继续压测上去。\n"),s("strong",[t._v("分析原因")]),t._v("：一个详情页html  主体达平均150 kb  那么在500QPS 已接近千M局域网宽带极限。必须减少内网通信。")]),t._v(" "),s("p",[s("strong",[t._v("基于Nginx 静态缓存的解决方案：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://images-cdn.shimo.im/QCzzBYLmRiY5ahtP/image.png!thumbnail",alt:"图片"}})]),t._v(" "),s("h3",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"_2-nginx-静态缓存基本配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-nginx-静态缓存基本配置"}},[t._v("#")]),t._v(" 2.Nginx 静态缓存基本配置")]),t._v(" "),s("p",[t._v("一、在http元素下添加缓存区声明。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#proxy_cache_path 缓存路径\n#levels 缓存层级及目录位数\n#keys_zone 缓存区内存大小\n#inactive 有效期\n#max_size 硬盘大小\nproxy_cache_path /data/nginx/cache_luban levels=1:2 keys_zone=cache_luban:500m inactive=20d max_size=1g;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("二、为指定location 设定缓存策略。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 指定缓存区\nproxy_cache cache_luban;\n#以全路径md5值做做为Key \nproxy_cache_key $host$uri$is_args$args;\n#对不同的HTTP状态码设置不同的缓存时间\nproxy_cache_valid 200 304 12h;\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("演示缓存生效过程")])]),t._v(" "),s("ul",[s("li",[t._v("[ ] 配置声明缓存路径")]),t._v(" "),s("li",[t._v("[ ] 为location 配置缓存策略")]),t._v(" "),s("li",[t._v("[ ] 重启nginx（修改了）")]),t._v(" "),s("li",[t._v("[ ] 查看缓存目录生成")])]),t._v(" "),s("p",[t._v("缓存参数详细说明")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("父元素")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("http")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("proxy_cache_path")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定缓存区的根路径")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("levels")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("缓存目录层级最高三层，每层1~2个字符表示。如1:1:2 表示三层。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("keys_zone")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("缓存块名称 及内存块大小。如 cache_item:500m 。表示声明一个名为cache_item 大小为500m。超出大小后最早的数据将会被清除。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("inactive")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("最长闲置时间 如:10d 如果一个数据被闲置10天将会被清除")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("max_size")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("缓存区硬盘最大值。超出闲置数据将会被清除")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("location")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("proxy_cache")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定缓存区，对应keys_zone 中设置的值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("proxy_cache_key")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("通过参数拼装缓存key 如：$host$uri$is_args$args 则会以全路径md5值做做为Key")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("proxy_cache_valid")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("为不同的状态码设置缓存有效期")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-缓存的清除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓存的清除"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3.缓存的清除：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("该功能可以采用第三方模块 ngx_cache_purge 实现。\n")])])]),s("p",[s("strong",[t._v("为nginx 添加 ngx_cache_purge  模块")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("#下载ngx_cache_purge 模块包 ,这里nginx 版本为1.6.2 purge 对应2.0版\nwget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz\n#查看已安装模块\n./sbin/nginx -V\n#进入nginx安装包目录 重新安装 --add-module为模块解压的全路径\n./configure --prefix=/root/svr/nginx --with-http_stub_status_module --with-http_ssl_module --add-module=/root/svr/nginx/models/ngx_cache_purge-2.0\n#重新编译\nmake\n#拷贝 安装目录/objs/nginx 文件用于替换原nginx 文件\n#检测查看安装是否成功\nnginx -t \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[s("strong",[t._v("清除配置：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~ /clear(/.*) {\n  #允许访问的IP\n   allow           127.0.0.1;\n   allow           192.168.0.193;\n   #禁止访问的IP\n   deny            all;\n   #配置清除指定缓存区和路径(与proxy_cache_key一至)\n   proxy_cache_purge    cache_item $host$1$is_args$args;\n}                        \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("配置好以后 直接访问 ：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 访问生成缓存文件\nhttp://www.luban.com/?a=1\n# 清除生成的缓存,如果指定缓存不存在 则会报404 错误。\nhttp://www.luban.com/clear/?a=1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"三、nginx-性能参数调优"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、nginx-性能参数调优"}},[t._v("#")]),t._v(" 三、Nginx 性能参数调优")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("worker_processes number;")]),t._v("\n每个worker进程都是单线程的进程，它们会调用各个模块以实现多种多样的功能。如果这些模块确认不会出现阻塞式的调用，那么，有多少CPU内核就应该配置多少个进程；反之，如果有可能出现阻塞式调用，那么需要配置稍多一些的worker进程。例如，如果业务方面会致使用户请求大量读取本地磁盘上的静态资源文件，而且服务器上的内存较小，以至于大部分的请求访问静态资源文件时都必须读取磁盘（磁头的寻址是缓慢的），而不是内存中的磁盘缓存，那么磁盘I/O调用可能会阻塞住worker进程少量时间，进而导致服务整体性能下降。")]),t._v(" "),s("p",[s("strong",[t._v("每个worker 进程的最大连接数")]),t._v(" "),s("strong",[t._v("语法")]),t._v("：worker_connections number;\n"),s("strong",[t._v("默认")]),t._v("：worker_connections 1024")]),t._v(" "),s("p",[s("strong",[t._v("worker_cpu_affinity cpumask[cpumask……]")]),t._v(" "),s("strong",[t._v("绑定Nginx worker进程到指定的CPU内核")]),t._v("\n为什么要绑定worker进程到指定的CPU内核呢？假定每一个worker进程都是非常繁忙的，如果多个worker进程都在抢同一个CPU，那么这就会出现同步问题。反之，如果每一个worker进程都独享一个CPU，就在内核的调度策略上实现了完全的并发。\n例如，如果有4颗CPU内核，就可以进行如下配置：\nworker_processes 4;\nworker_cpu_affinity 1000 0100 0010 0001;\n注意 worker_cpu_affinity配置仅对Linux操作系统有效。")]),t._v(" "),s("p",[s("strong",[t._v("Nginx worker 进程优先级设置")]),t._v(" "),s("strong",[t._v("语法")]),t._v("：worker_priority nice;\n"),s("strong",[t._v("默认")]),t._v("：worker_priority 0;\n优先级由静态优先级和内核根据进程执行情况所做的动态调整（目前只有±5的调整）共同决定。nice值是进程的静态优先级，它的取值范围是–20～+19，–20是最高优先级，+19是最低优先级。因此，如果用户希望Nginx占有更多的系统资源，那么可以把nice值配置得更小一些，但不建议比内核进程的nice值（通常为–5）还要小")]),t._v(" "),s("p",[s("strong",[t._v("Nginx worker进程可以打开的最大句柄描述符个数")]),t._v(" "),s("strong",[t._v("语法")]),t._v("： worker_rlimit_nofile limit;\n**默认：**空\n更改worker进程的最大打开文件数限制。如果没设置的话，这个值为操作系统的限制。设置后你的操作系统和Nginx可以处理比“ulimit -a”更多的文件，所以把这个值设高，这样nginx就不会有“too many open files”问题了。")]),t._v(" "),s("p",[s("strong",[t._v("是否打开accept锁")]),t._v(" "),s("strong",[t._v("语法")]),t._v("：accept_mutex[on|off]\n"),s("strong",[t._v("默认")]),t._v("：accept_mutext on;\naccept_mutex是Nginx的负载均衡锁，当某一个worker进程建立的连接数量达到worker_connections配置的最大连接数的7/8时，会大大地减小该worker进程试图建立新TCP连接的机会，accept锁默认是打开的，如果关闭它，那么建立TCP连接的耗时会更短，但worker进程之间的负载会非常不均衡，因此不建议关闭它。")]),t._v(" "),s("p",[s("strong",[t._v("使用accept锁后到真正建立连接之间的延迟时间")]),t._v("\n语法：accept_mutex_delay Nms; \n默认：accept_mutex_delay 500ms; \n在使用accept锁后，同一时间只有一个worker进程能够取到accept锁。这个accept锁不是堵塞锁，如果取不到会立刻返回。如果只有一个worker进程试图取锁而没有取到，他至少要等待accept_mutex_delay定义的时间才能再次试图取锁。")])])}),[],!1,null,null,null);s.default=n.exports}}]);