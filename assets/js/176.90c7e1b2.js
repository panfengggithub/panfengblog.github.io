(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{559:function(s,n,a){"use strict";a.r(n);var t=a(1),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"spring循环引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring循环引用"}},[s._v("#")]),s._v(" **Spring循环引用")]),s._v(" "),n("p",[s._v("众所周知spring在默认单例的情况下是支持循环引用的")]),s._v(" "),n("p",[s._v("Appconfig.java类的代码")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configurable")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@ComponentScan")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.shadow"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Appconfig")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("X.java类的代码")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shadow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("service")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("beans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("factory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Autowired")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stereotype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Component")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Y")]),s._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X create"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("Y.java的代码")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shadow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("service")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("beans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("factory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Autowired")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stereotype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Component")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v(" \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Y")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Y")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y create"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("这两个类非常简单，就是相互引用了对方，也就是我们常常的说的循环依赖，spring是允许这样的循环依赖(前提是单例的情况下的,非构造方法注入的情况下)")]),s._v(" "),n("p",[s._v("运行这段代码的结果下图")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051711410-34b64c45-8beb-4bf6-bc90-a9d84d6cf191.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("上面代码从容器中能正常获取到Xbean，说明循环依赖成功。但是spring的循环依赖其实是可以关闭的，spring提供了api来关闭循环依赖的功能。当然你也可以修改spring源码来关闭这个功能，这里笔者为了提高逼格，就修改一下spring的源码来关闭这个功能，老话说要想高明就得装逼。")]),s._v(" "),n("p",[s._v("下图是我修改spring源码运行的结果")]),s._v(" "),n("p",[s._v("我在AnnotationConfigApplicationContext的构造方法中加了一行setAllowCircularReferences(false);结果代码异常，循环依赖失败")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051734084-5b5679de-ccc5-4771-adde-66d857efcaad.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("那么为什么setAllowCircularReferences(false);会关闭循环依赖呢？首要明白spring的循环依赖是怎么做到的呢？spring源码当中是如何处理循环依赖的？ 分析一下所谓的循环依赖其实无非就是属性注入，或者就是大家常常说的自动注入， 故而搞明白循环依赖就需要去研究spring自动注入的源码；spring的属性注入属于spring bean的生命周期一部分；怎么理解spring bean的生命周期呢？注意笔者这里并不打算对bean的生命周期大书特书，只是需要读者理解生命周期的概念，细节以后在计较；")]),s._v(" "),n("p",[s._v("要理解bean的生命周期首先记住两个概念")]),s._v(" "),n("p",[s._v("请读者一定记住两个概念——spring bean（一下简称bean）和对象；")]),s._v(" "),n("ul",[n("li",[s._v("1、spring bean——受spring容器管理的对象，可能经过了完整的spring bean生命周期（为什么是可能？难道还有bean是没有经过bean生命周期的？答案是有的，具体我们后面文章分析），最终存在spring容器当中；一个bean一定是个对象")]),s._v(" "),n("li",[s._v("2、对象——任何符合java语法规则实例化出来的对象，但是一个对象并不一定是spring bean；")])]),s._v(" "),n("p",[s._v("所谓的bean的生命周期就是磁盘上的类通过spring扫描，然后实例化，跟着初始化，继而放到容器当中的过程")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/png/365147/1576051770320-93ad5452-c4b3-41f7-a55a-0e8e1eba0722.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_30%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("上图就是spring容器初始化bean的大概过程(至于详细的过程，后面文章再来介绍)；")]),s._v(" "),n("p",[s._v("文字总结一下：")]),s._v(" "),n("ul",[n("li",[s._v("1：实例化一个ApplicationContext的对象；")]),s._v(" "),n("li",[s._v("2：调用bean工厂后置处理器完成扫描；")]),s._v(" "),n("li",[s._v("3：循环解析扫描出来的类信息；")]),s._v(" "),n("li",[s._v("4：实例化一个BeanDefinition对象来存储解析出来的信息；")]),s._v(" "),n("li",[s._v("5：把实例化好的beanDefinition对象put到beanDefinitionMap当中缓存起来，以便后面实例化bean；")]),s._v(" "),n("li",[s._v("6：再次调用bean工厂后置处理器；")]),s._v(" "),n("li",[s._v("7：当然spring还会干很多事情，比如国际化，比如注册BeanPostProcessor等等，如果我们只关心如何实例化一个bean的话那么这一步就是spring调用finishBeanFactoryInitialization方法来实例化单例的bean，实例化之前spring要做验证，需要遍历所有扫描出来的类，依次判断这个bean是否Lazy，是否prototype，是否abstract等等；")]),s._v(" "),n("li",[s._v("8：如果验证完成spring在实例化一个bean之前需要推断构造方法，因为spring实例化对象是通过构造方法反射，故而需要知道用哪个构造方法；")]),s._v(" "),n("li",[s._v("9：推断完构造方法之后spring调用构造方法反射实例化一个对象；注意我这里说的是对象、对象、对象；这个时候对象已经实例化出来了，但是并不是一个完整的bean，最简单的体现是这个时候实例化出来的对象属性是没有注入，所以不是一个完整的bean；")]),s._v(" "),n("li",[s._v("10：spring处理合并后的beanDefinition(合并？是spring当中非常重要的一块内容，后面的文章我会分析)；")]),s._v(" "),n("li",[s._v("11：判断是否支持循环依赖，如果支持则提前把一个工厂存入singletonFactories——map；")]),s._v(" "),n("li",[s._v("12：判断是否需要完成属性注入")]),s._v(" "),n("li",[s._v("13：如果需要完成属性注入，则开始注入属性")]),s._v(" "),n("li",[s._v("14：判断bean的类型回调Aware接口")]),s._v(" "),n("li",[s._v("15：调用生命周期回调方法")]),s._v(" "),n("li",[s._v("16：如果需要代理则完成代理")]),s._v(" "),n("li",[s._v("17：put到单例池——bean完成——存在spring容器当中")]),s._v(" "),n("li",[s._v("用一个例子来证明上面的步骤")])]),s._v(" "),n("p",[s._v("Z.java的源码")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("shadow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("service")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("beans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeansException")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("beans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("factory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Autowired")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationContext")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationContextAware")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stereotype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Component")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token import"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("javax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PostConstruct")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Z")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationContextAware")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("X")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注入X")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//构造方法")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Z")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Z create"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//生命周期初始化回调方法")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PostConstruct")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("zinit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"call z lifecycle init callback"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//ApplicationContextAware 回调方法")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("setApplicationContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationContext")]),s._v(" ac"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"call aware callback"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[s._v("来看看Z的生命周期，注意下图当中的字幕，会和上面的17个步骤一一对应")]),s._v(" "),n("p",[s._v("第一步到第六步，请自行对应")]),s._v(" "),n("p",[s._v("接下来我们通过各种图片分析一下springbean的生命周期，读者只需要看图搞明白流程，至于图中涉及的源码，分析完流程之后再来解释；")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051833502-ea6091d0-a7cf-4029-9b50-38b9ffdbefa3.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("在研究其他步骤之前，首先了解spring大概在什么时候实例化bean的")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051843286-4f3a1cbd-74eb-4f7c-a529-ec5befd38b3d.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("上图可以知道spring在AbstractApplicationContext#finishBeanFactoryInitialization方法中完成了bean的实例化。这点需要记住")]),s._v(" "),n("p",[s._v("然后通过图片来说明一下第7步")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051855840-0e9c1438-55eb-40a6-9640-16081f761e1c.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("接下来spring需要推断构造方法，然后通过推断出来的构造方法反射实例化对象，也就是上面说的第8步和第9步")]),s._v(" "),n("p",[s._v("当然他有可能推断不出来构造方法——关于这块知识我后面更新文章来说明")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051864208-68d1d68a-028b-407e-9ff5-e6583c8a7495.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("上图说明spring是通过createBeanInstance(beanName, mbd, args);完成了推断构造方法和实例化的事情那么接下来便要执行第10步处理合并后的beanDefinition对象，这一块内容特别多，读者可以先不必要理解，后面文章会解释；")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051874929-655b1b8e-9597-4580-bb89-d8e5fd2daba9.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("仔细看上图，其实这个时候虽然Z被实例化出来了，但是并没有完成属性的注入；其中的X属性为null，而且里面的Aware接口的方法也没有调用，再就是@PostConstruct方法也没有调用，再一次说明他不是一个完整的bean，这里我们只能说z是个对象；")]),s._v(" "),n("p",[s._v("继而applyMergedBeanDefinitionPostProcessors方法就是用来处理合并后的beanDefinition对象；")]),s._v(" "),n("p",[s._v("跟着第11步，判断是否支持循环依赖，如果支持则提前暴露一个工厂对象，注意是工厂对象")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051883008-7f4bc63b-083f-469a-8a65-ade31d144e0c.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("第12步，spring会判断是否需要完成属性注入（spring默认是需要的，但是程序员可以扩展spring，根据情况是否需要完成属性注入）；如果需要则spring完成13步——属性注入，也就是所谓的自动注入；")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051890331-50b78fdd-ac31-47b4-a0cf-6c87fcef3e74.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("第14、15、16步")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/gif/365147/1576051901175-f3485704-dd62-4ddd-86cd-838edefac266.gif",alt:"img"}})]),s._v(" "),n("p",[s._v("下面笔者介绍一下spring创建一个bean的流程，通过源码结合在idea当中debug截图来说明")]),s._v(" "),n("p",[s._v("1、main方法，初始化spring容器，在初始化容器之后默认的单例bean已经实例化完成了，也就是说spring的默认单例bean创建流程、和所谓自动注入的功能都在容器初始化的过程中。故而我们需要研究这个容器初始化过程、在哪里体现了自动注入；")]),s._v(" "),n("p",[s._v("进入AnnotationConfigApplicationContext类的构造方法")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051928522-7454d695-3a0c-49d2-a86d-e38d54e3ec54.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_49%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("2、在构造方法中调用了refresh方法，查看refresh方法")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051939049-a3babd5b-59e6-4a20-8f6d-bc332383b267.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_48%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("3、refresh方法当中调用finishBeanFactoryInitialization方法来实例化所有扫描出来的类")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051956954-b33bcc68-5eb5-44df-a3cb-2a85debf0d12.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_51%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("4、finishBeanFactoryInitialization方法当中调用preInstantiateSingletons初始化扫描出来的类")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051962840-536d0d85-87b0-4569-9745-af9915a88b87.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_44%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("5、preInstantiateSingletons方法经过一系列判断之后会调用getBean方法去实例化扫描出来的类")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051969557-4acafe35-e979-43ec-b1d6-a8c9fd627947.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_51%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("6、getBean方法就是个空壳方法，调用了doGetBean方法")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576051975840-ccd72d71-de8a-429c-b479-b02e0fa4debd.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_49%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("doGetBean方法内容有点多，这个方法非常重要，不仅仅针对循环依赖，")]),s._v(" "),n("p",[s._v("甚至整个spring bean生命周期中这个方法也有着举足轻重的地位，读者可以认真看看笔者的分析。需要说明的是我为了更好的说清楚这个方法，我把代码放到文章里面进行分析；但是删除了一些无用的代码；比如日志的记录这些无关紧要的代码。下面重点说这个doGetBean方法")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doGetBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Nullable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Class")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" requiredType"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Nullable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" typeCheckOnly"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeansException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个方法非常重要，但是和笔者今天要分析的循环依赖没什么很大的关系")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//读者可以简单的认为就是对beanName做一个校验特殊字符串的功能")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我会在下次更新博客的时候重点讨论这个方法")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//transformedBeanName(name)这里的name就是bean的名字")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("transformedBeanName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义了一个对象，用来存将来返回出来的bean")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Eagerly check singleton cache for manu  ally registered singletons.")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/**\n    * 注意这是第一次调用getSingleton方法，下面spring还会调用一次\n    * 但是两次调用的不是同一个方法；属于方法重载\n    * 第一次 getSingleton(beanName) 也是循环依赖最重要的方法\n    * 关于getSingleton(beanName)具体代码分析可以参考笔者后面的分析\n    * 这里给出这个方法的总结\n    * 首先spring会去单例池去根据名字获取这个bean，单例池就是一个map\n    * 如果对象被创建了则直接从map中拿出来并且返回\n    * 但是问题来了，为什么spring在创建一个bean的时候会去获取一次呢？\n    * 因为作为代码的书写者肯定知道这个bean这个时候没有创建？为什么需要get一次呢？\n    * 关于这个问题其实原因比较复杂，需要读者对spring源码设计比较精通\n    * 笔者不准备来针对这个原因大书特书，稍微解释一下吧\n    * 我们可以分析doGetBean这个方法，顾名思义其实是用来获取bean的\n    * 为什么创建bean会调用这个doGetBean方法呢？难道是因为spring作者疏忽，获取乱起名字\n    * 显然不是，spring的源码以其书写优秀、命名优秀而著名，那么怎么解释这个方法呢？\n    * 其实很简单doGetBean这个方法不仅仅在创建bean的时候会被调用，在getBean的时候也会调用\n    * 他是创建bean和getBean通用的方法。但是这只是解释了这个方法的名字意义\n    * 并么有解释这个方法为什么会在创建bean的时候调用\n    * 笔者前面已经说过原因很复杂，和本文有关的就是因为循环引用\n    * 由于循环引用需要在创建bean的过程中去获取被引用的那个类\n    * 而被引用的这个类如果没有创建，则会调用createBean来创建这个bean\n    * 在创建这个被引用的bean的过程中会判断这个bean的对象有没有实例化\n    * bean的对象？什么意思呢？\n    * 为了方便阅读，请读者一定记住两个概念；什么是bean，什么是对象\n    * 笔者以为一个对象和bean是有区别的\n    * 对象：只要类被实例化就可以称为对象\n    * bean：首先得是一个对象，然后这个对象需要经历一系列的bean生命周期\n    * 最后把这个对象put到单例池才能算一个bean\n    * 读者千万注意，笔者下文中如果写到bean和写到对象不是随意写的\n    * 是和这里的解释有关系的；重点一定要注意；一定；一定；\n    * 简而言之就是spring先new一个对象，继而对这个对象进行生命周期回调\n    * 接着对这个对象进行属性填充，也是大家说的自动注入\n    * 然后在进行AOP判断等等；这一些操作简称----spring生命周期\n    * 所以一个bean是一个经历了spring周期的对象，和一个对象有区别\n    * 再回到前面说的循环引用，首先spring扫描到一个需要被实例化的类A\n    * 于是spring就去创建A；A=new A-a;new A的过程会调用getBean("a"))；\n    * 所谓的getBean方法--核心也就是笔者现在写注释的这个getSingleton(beanName)\n    * 这个时候get出来肯定为空？为什么是空呢？我写这么多注释就是为了解释这个问题?\n    * 可能有的读者会认为getBean就是去容器中获取，所以肯定为空，其实不然，接着往下看\n    * 如果getA等于空；spring就会实例化A；也就是上面的new A\n    * 但是在实例化A的时候会再次调用一下 \n    * getSingleton(String beanName, ObjectFactory<?> singletonFactory)\n    * 笔者上面说过现在写的注释给getSingleton(beanName)\n    * 也即是第一次调用getSingleton(beanName)\n    * 实例化一共会调用两次getSingleton方法；但是是重载\n    * 第二次调用getSingleton方法的时候spring会在一个set集合当中记录一下这个类正在被创建\n    * 这个一定要记住，在调用完成第一次getSingleton完成之后\n    * spring判读这个类没有创建，然后调用第二次getSingleton\n    * 在第二次getSingleton里面记录了一下自己已经开始实例化这个类\n    * 这是循环依赖做的最牛逼的地方，两次getSingleton的调用\n    * 也是回答面试时候关于循环依赖必须要回答道的地方；\n    * 需要说明的spring实例化一个对象底层用的是反射；\n    * spring实例化一个对象的过程非常复杂，需要推断构造方法等等；\n    * 这里笔者先不讨论这个过程，以后有机会更新一下\n    * 读者可以理解spring直接通过new关键字来实例化一个对象\n    * 但是这个时候对象a仅仅是一个对象，还不是一个完整的bean\n    * 接着让这个对象去完成spring的bean的生命周期\n    * 过程中spring会判断容器是否允许循环引用，判断循环引用的代码笔者下面会分析\n    * 前面说过spring默认是支持循环引用的，笔者后面解析这个判断的源码也是spring默认支持循环引用的证据\n    * 如果允许循环依赖，spring会把这个对象(还不是bean)临时存起来，放到一个map当中\n    * 注意这个map和单例池是两个map，在spring源码中单例池的map叫做 singletonObjects\n    * 而这个存放临时对象的map叫做singletonFactories\n    * 当然spring还有一个存放临时对象的map叫做earlySingletonObjects\n    * 所以一共是三个map，有些博客或者书籍人也叫做三级缓存\n    * 为什么需要三个map呢？先来了解这三个map到底都缓存了什么\n    * 第一个map singletonObjects 存放的单例的bean\n    * 第二个map singletonFactories 存放的临时对象(没有完整springBean生命周期的对象)\n    * 第三个map earlySingletonObjects 存放的临时对象(没有完整springBean生命周期的对象)\n    * 笔者为了让大家不懵逼这里吧第二个和第三个map功能写成了一模一样\n    * 其实第二个和第三个map会有不一样的地方，但这里不方便展开讲，下文会分析\n    * 读者姑且认为这两个map是一样的\n    * 第一个map主要为了直接缓存创建好的bean；方便程序员去getBean；很好理解\n    * 第二个和第三个主要为了循环引用；为什么为了方便循环引用，接着往下看\n    * 把对象a缓存到第二个map之后，会接着完善生命周期；\n    * 当然spring bean的生命周期很有很多步骤；本文先不详细讨论；\n    * 后面的博客笔者再更新；\n    * 当进行到对象a的属性填充的这一周期的时候，发觉a依赖了一个B类\n    * 所以spring就会去判断这个B类到底有没有bean在容器当中\n    * 这里的判断就是从第一个map即单例池当中去拿一个bean\n    * 后面我会通过源码来证明是从第一个map中拿一个bean的\n    * 假设没有，那么spring会先去调用createBean创建这个bean\n    * 于是又回到和创建A一样的流程，在创建B的时候同样也会去getBean("B")；\n    * getBean核心也就是笔者现在写注释的这个getSingleton(beanName)方法\n    * 下面我重申一下：因为是重点\n    * 这个时候get出来肯定为空？为什么是空呢？我写这么多注释就是为了解释这个问题?\n    * 可能有的读者会认为getBean就是去容器中获取；\n    * 所以肯定为空，其实不然，接着往下看；\n    * 第一次调用完getSingleton完成之后会调用第二次getSingleton\n   * 第二次调用getSingleton同样会在set集合当中去记录B正在被创建\n   * 请笔者记住这个时候 set集合至少有两个记录了 A和B；\n   * 如果为空就 b=new B()；创建一个b对象；\n   * 再次说明一下关于实例化一个对象，spring做的很复杂，下次讨论\n   * 创建完B的对象之后，接着完善B的生命周期\n   * 同样也会判断是否允许循环依赖，如果允许则把对象b存到第二个map当中；\n   * 提醒一下笔者这个时候第二个map当中至少有两个对象了，a和b\n   * 接着继续生命周期；当进行到b对象的属性填充的时候发觉b需要依赖A\n   * 于是就去容器看看A有没有创建，说白了就是从第一个map当中去找a\n   * 有人会说不上A在前面创建了a嘛？注意那只是个对象，不是bean;\n   * 还不在第一个map当中 对所以b判定A没有创建，于是就是去创建A；\n   * 那么又再次回到了原点了，创建A的过程中；首先调用getBean("a")\n   * 上文说到getBean("a")的核心就是 getSingleton(beanName)\n   * 上文也说了get出来a==null；但是这次却不等于空了\n   * 这次能拿出一个a对象；注意是对象不是bean\n   * 为什么两次不同？原因在于getSingleton(beanName)的源码\n   * getSingleton(beanName)首先从第一个map当中获取bean\n   * 这里就是获取a；但是获取不到；然后判断a是不是等于空\n   * 如果等于空则在判断a是不是正在创建？什么叫做正在创建？\n   * 就是判断a那个set集合当中有没有记录A；\n   * 如果这个集合当中包含了A则直接把a对象从map当中get出来并且返回\n   * 所以这一次就不等于空了，于是B就可以自动注入这个a对象了\n   * 这个时候a还只是对象，a这个对象里面依赖的B还没有注入\n   * 当b对象注入完成a之后，把B的周期走完，存到容器当中\n   * 存完之后继续返回，返回到a注入b哪里？\n   * 因为b的创建时因为a需要注入b；于是去get b\n   * 当b创建完成一个bean之后，返回b(b已经是一个bean了)\n   * 需要说明的b是一个bean意味着b已经注入完成了a；这点上面已经说明了\n   * 由于返回了一个b，故而a也能注入b了；\n   * 接着a对象继续完成生命周期，当走完之后a也在容器中了\n   * 至此循环依赖搞定\n   * 需要说明一下上文提到的正在创建这种说法并没有官方支持\n   * 是笔者自己的认为；各位读者可以自行给他取名字\n   * 笔者是因为存放那些记录的set集合的名字叫做singletonsCurrentlyInCreation\n   * 顾名思义，当前正在创建的单例对象。。。。。\n   * 还有上文提到的对象和bean的概念；也没有官方支持\n   * 也是笔者为了让读者更好的理解spring源码而提出的个人概念\n   * 但是如果你觉得这种方法确实能让你更好的理解spring源码\n   * 那么请姑且相信笔者对spring源码的理解，假设10个人相信就会有100个人相信\n   * 继而会有更多人相信，就会成为官方说法，哈哈。\n   * 以上是循环依赖的整个过程，其中getSingleton(beanName)\n   * 这个方法的存在至关重要\n   * 最后说明一下getSingleton(beanName)的源码分析，下文会分析\n   **/')]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    \n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 如果sharedInstance不等于空直接返回\n   * 当然这里没有直接返回而是调用了getObjectForBeanInstance\n   * 关于这方法以后解释，读者可以认为这里可以理解为\n   * bean =sharedInstance; 然后方法最下面会返回bean\n   * 什么时候不等于空？\n   * 再容器初始化完成之后\n   * 程序员直接调用getbean的时候不等于空\n   * 什么时候等于空？\n   * 上文已经解释过了，创建对象的时候调用就会等于空\n   */")]),s._v("  \n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" args "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      bean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getObjectForBeanInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sharedInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n        * 判断这个类是不是在创建过程中\n        * 上文说了，一个类是否在创建的过程中是第二次调用getSingleton中决定的\n        * 这里还没有执行到，如果就在创建过程中则出异常\n        * \n        **/")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//prototypesCurrentlyInCreation 需要联系 getSingleton方法")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isPrototypeCurrentlyInCreation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeanCurrentlyInCreationException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n           * 需要说明的笔者删了很多和本文无用的代码\n           * 意思就是源码中执行到这个if的时候有很多其他代码\n           * 但是都是一些判断，很本文需要讨论的问题关联不大\n           * 这个if就是判断当前需要实例化的类是不是单例的\n           * spring默认都是单例的，故而一般都成立的\n           * 接下来便是调用第二次 getSingleton\n           * 第二次会把当前正在创建的类记录到set集合\n           * 然后反射创建这个实例，并且走完生命周期\n           * 第二次调用getSingleton的源码分析会在下文\n           **/")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//完成了目标对象的创建")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果需要代理，还完成了代理")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeansException")]),s._v(" ex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Explicitly remove instance from singleton cache: It might have been put there")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eagerly by the creation process, to allow for circular reference resolution.")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Also remove any beans that received a temporary reference to the bean.")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("destroySingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" ex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            bean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getObjectForBeanInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sharedInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br")])]),n("p",[s._v("第一次调用getSingleton的源码分析 Object sharedInstance =")]),s._v(" "),n("p",[s._v("getSingleton(beanName);")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//空壳方法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重点，一定要记住这里传的是一个true，面试会考")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n上面说的true对应这里的第二个参数boolean allowEarlyReference\n顾名思义 叫做允许循环引用，而spring在内部调用这个方法的时候传的true\n这也能说明spring默认是支持循环引用的，这也是需要讲过面试官的\n但是你不能只讲这一点，后面我会总结，这里先记着这个true\n这个allowEarlyReference也是支持spring默认支持循环引用的其中一个原因\n**/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" allowEarlyReference"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     首先spring会去第一个map当中去获取一个bean；说白了就是从容器中获取\n     说明我们如果在容器初始化后调用getBean其实就从map中去获取一个bean\n     假设是初始化A的时候那么这个时候肯定等于空，前文分析过这个map的意义\n     **/")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n       我们这里的场景是初始化对象A第一次调用这个方法\n       这段代码非常重要，首先从容器中拿，如果拿不到，再判断这个对象是不是在set集合\n       这里的set集合前文已经解释过了，就是判断a是不是正在创建\n       假设现在a不在创建过程，那么直接返回一个空，第一次getSingleton返回\n       **/")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingletonCurrentlyInCreation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("earlySingletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" allowEarlyReference"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectFactory")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" singletonFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonFactories"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n               singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" singletonFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("earlySingletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" singletonObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonFactories"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" singletonObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("第二次调用getSingleton sharedInstance = getSingleton(beanName, () ->")]),s._v(" "),n("p",[s._v("代码我做了删减，删了一些本本文无关的代码")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectFactory")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" singletonFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首先也是从第一个map即容器中获取")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//再次证明如果我们在容器初始化后调用getBean其实就是从map当中获取一个bean")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们这里的场景是初始化对象A第一次调用这个方法")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么肯定为空")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**注意这行代码，就是A的名字添加到set集合当中\n          也就是笔者说的标识A正在创建过程当中\n          这个方法比较简单我就不单独分析了，直接在这里给出\n          singletonsCurrentlyInCreation.add就是放到set集合当中\n          protected void beforeSingletonCreation(String beanName) {\n               if (!this.inCreationCheckExclusions.contains(beanName)\n                && !this.singletonsCurrentlyInCreation.add(beanName)) {\n                  throw new BeanCurrentlyInCreationException(beanName);\n           }\n        }\n        **/")]),s._v("\n        \n         "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("beforeSingletonCreation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" newSingleton "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里便是创建一个bean的入口了")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//spring会首先实例化一个对象，然后走生命周期")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//走生命周期的时候前面说过会判断是否允许循环依赖")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果允许则会把创建出来的这个对象放到第二个map当中")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//然后接着走生命周期当他走到属性填充的时候")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//会去get一下B，因为需要填充B，也就是大家认为的自动注入")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这些代码下文分析，如果走完了生命周期")]),s._v("\n            singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" singletonFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            newSingleton "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" singletonObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("如果允许则会把创建出来的这个对象放到第二个map当中")]),s._v(" "),n("p",[s._v("AbstractAutowireCapableBeanFactory#doCreateBean()方法部分代码")]),s._v(" "),n("p",[s._v("由于这个方法内容过去多，我删减了一些无用代码 上面说的 singletonObject =")]),s._v(" "),n("p",[s._v("singletonFactory.getObject();")]),s._v(" "),n("p",[s._v("会开始创建bean调用AbstractAutowireCapableBeanFactory#doCreateBean() 在创建bean；")]),s._v(" "),n("p",[s._v("下面分析这个方法")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doCreateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RootBeanDefinition")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Nullable")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeanCreationException")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Instantiate the bean.")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeanWrapper")]),s._v(" instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果你bean指定需要通过factoryMethod来创建则会在这里被创建")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果读者不知道上面factoryMethod那你就忽略这行代码")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//你可以认为你的A是一个普通类，不会再这里创建")]),s._v("\n      instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("factoryBeanInstanceCache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里就通过反射创建一个对象，注意是对象不是bean")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个createBeanInstance的方法过于复杂，本文不做分析")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以后如果有更新再来分析这个代码")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//读者可以理解这里就是new了一个A对象")]),s._v("\n      instanceWrapper "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createBeanInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//得到new出来的A，为什么需要得到呢？因为Anew出来之后存到一个对象的属性当中")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" bean "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" instanceWrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getWrappedInstance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重点:面试会考")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里就是判断是不是支持循环引用和是否单例以及bean是否在创建过程中")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//判断循环引用的是&& this.allowCircularReferences")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//allowCircularReferences在spring源码当中默认就是true")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// private boolean allowCircularReferences = true; 这是spring源码中的定义")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//并且这个属性上面spring写了一行非常重要的注释")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Whether to automatically try to resolve circular references between beans")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读者自行翻译，这是支持spring默认循环引用最核心的证据")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//读者一定要讲给面试官，关于怎么讲，我后面会总结")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" earlySingletonExposure "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n       "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("allowCircularReferences "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingletonCurrentlyInCreation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果是单例，并且正在创建，并且是没有关闭循环引用则执行")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//所以spring原形是不支持循环引用的这是证据，但是其实可以解决")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//怎么解决原形的循环依赖，笔者下次更新吧      ")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("earlySingletonExposure"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里就是这个创建出来的A 对象a 放到第二个map当中")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意这里addSingletonFactory就是往map当中put")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要说明的是他的value并不是一个a对象")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//而是一段表达式，但是包含了这个对象的")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//所以上文说的第二个map和第三个map的有点不同")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第三个map是直接放的a对象(下文会讲到第三个map的)，")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第二个放的是一个表达式包含了a对象")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//为什么需要放一个表达式？下文分析吧")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("addSingletonFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getEarlyBeanReference")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Initialize the bean instance.")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//填充属性，也就是所谓的自动注入")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个代码我同一张图来说明")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("populateBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" instanceWrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("initializeBean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" exposedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" exposedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br")])]),n("p",[s._v("populateBean(beanName, mbd, instanceWrapper)截图图说明")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576052073406-e93a552d-eede-4012-ba5c-8a8903c99469.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_54%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("当A执行到属性填充的时候会调用AutowiredAnnotationBeanPostProcessor的postProcessProperties方法来完成填充或者叫做自动注入b")]),s._v(" "),n("p",[s._v("下图有很多文字注释，可以放大图上的注释")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576052081331-70a8b340-746a-412f-b44e-8bbe6db7f006.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_54%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("填充B的时候先从容器中获取B，这个时候b没有创建则等于空，然后看B是不是正在创建，这个时候B只是执行了第一次getSingleton故而不在第二个map当中，所以返回空，返回空之后会执行创建B的流程；执行第二遍调用getSingleton的时候会把b标识正在创建的过程中，也就是添加到那个set集合当中；下图做说明")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2019/jpeg/365147/1576052088206-e248d576-5e8c-4a24-af5a-9d1c484ec14f.jpeg?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_53%2Ctext_6bKB54-t5a2m6Zmi5Ye65ZOB%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10",alt:"img"}})]),s._v(" "),n("p",[s._v("创建B的流程和创建A差不多，把B放到set集合，标识B正在创建，继而实例化b对象，然后执行生命周期流程，把创建的这个b对象放到第二个map当中，这个时候map当中已经有了a，b两个对象。")]),s._v(" "),n("p",[s._v("然后执行b对象的属性填充或者叫自动注入时候发觉需要依赖a，于是重复上面的getbean步骤，调用getSingleton方法；只不过现在a对象已经可以获取了故而把获取出来的a对象、临时对象注入给b对象，然后走完b的生命周期流程后返回b所表示bean，跟着把这个b所表示的bean注入给a对象，最后走完a对象的其他生命周期流程；循环依赖流程全部走完；但是好像没有说到第三个map，第三个map到底充当了什么角色呢？")]),s._v(" "),n("p",[s._v("这个知识点非常的重要，关于这个知识不少书籍和博客都说错了，这也是写这篇文章的意义；笔者说每次读spring源码都不一样的收获，这次最大的收获便是这里了；我们先来看一下代码；")]),s._v(" "),n("p",[s._v("场景是这样的，spring创建A，记住第一次创建A，过程中发觉需要依赖B，于是创建B，创建B的时候发觉需要依赖A，于是再一次创建–第二次创建A，下面代码就是基于第二次创建的A来分析；第二次创建A的时候依然会调用getSingleton，先获取一下a")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getSingleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" allowEarlyReference"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//先从第一个map获取a这个bean，也就是单例池获取")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSingletonCurrentlyInCreation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//然后从第三个map当中获取a这个对象")]),s._v("\n         singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("earlySingletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果第三个map获取不到a对象，再看是否允许了循环引用")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//而这里的allowEarlyReference是true")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//为什么是true，上文说了这个方法是spring自己调用的，他默认传了true")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" allowEarlyReference"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//然后从第二个map中获取一个表达式")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里要非常注意第二个map当中存的不是一个单纯的对象")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//前面说了第二个map当中存的是一个表达式，你可以理解为存了一个工厂")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//或者理解存了一个方法，方法里面有个参数就是这个对象")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//安装spring的命名来分析应该理解为一个工厂singletonFactory")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//一个能够生成a对象的工厂")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么他为什么需要这么一个工厂")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里我先大概说一下，是为了通过工厂来改变这个对象")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//至于为什么要改变对象，下文我会分析")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当然大部分情况下是不需要改变这个对象的")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//读者先可以考虑不需要改变这个对象，")]),s._v("\n             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么这个map里面存的工厂就生产就是这个原对象，那么和第三个map功能一样")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ObjectFactory")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" singletonFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonFactories"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("singletonFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//调用表达式，说白了就是调用工厂的方法，然后改变对象")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我们假设对象不需要改变的情况那么返回了原对象就是a")]),s._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要改变的情况我们下文再分享")]),s._v("\n               singletonObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" singletonFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//然后把这个对象放到第三个map当中")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("earlySingletonObjects"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("put")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" singletonObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//把这个对象、或者表达式、或者工厂从第二个map中移除")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("singletonFactories"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("remove")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重点:面试会考---为什么要放到第三个？为什么要移除第二个？")]),s._v("\n               首先我们通过分析做一个总结"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                   spring首先从第一个map中拿a这个bean\n                   拿不到，从第三个map当中拿a这个对象\n                   拿不到，从第二个map拿a这个对象或者工厂\n                   拿到之后放到第三个map，移除第二个map里面的表达式、或者工厂\n               如果对象需要改变，当改变完成之后就把他放到第三个里面\n               这里的情况是b需要a而进行的步骤，试想一下以后如果还有"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("C")]),s._v("需要依赖a\n               就不需要重复第二个map的工作了，也就是改变对象的工作了。\n               因为改变完成之后的a对象已经在第三个map中了。不知道读者能不能懂笔者的意思\n               如果对象不需要改变道理是一样的，也同样在第三个map取就是了；\n               至于为什么需要移除第二个map里面的工厂、或者表达式就更好理解了\n               他已经对a做完了改变，改变之后的对象已经在第三个map了，为了方便gc啊\n               下面对为什么需要改变对象做分析\n               \n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" singletonObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br")])]),n("p",[s._v("为什么需要改变对象？那个表达式、或者说工厂主要干什么事呢？ 那个工厂、或者表达式主要是调用了下面这个方法")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个方法内容比较少，但是很复杂，因为是对后置处理器的调用")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//关于后置处理器笔者其实要说话很多很多")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//现在市面上可见的资料或者书籍对后置处理器的说法笔者一般都不苟同")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我在B站上传过一个4个小时的视频，其中对spring后置处理器做了详细的分析")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//也提出了一些自己的理解和主流理解不同的地方，有兴趣同学可以去看看")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//其实简单说--这个方法作用主要是为了来处理aop的；")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当然还有其他功能，但是一般的读者最熟悉的就是aop")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里我说明一下，aop的原理或者流程有很多书籍说到过")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但是笔者今天亲测了，现在市面可见的资料和书籍对aop的说法都不全")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//很多资料提到aop是在spring bean的生命周期里面填充属性之后的代理周期完成的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//而这个代理周期甚至是在执行生命周期回调方法之后的一个周期")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么问题来了？什么叫spring生命周期回调方法周期呢？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 首先spring bean生命周期和spring生命周期回调方法周期是两个概念")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//spring生命周期回调方法是spring bean生命周期的一部分、或者说一个周期")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//简单理解就是spring bean的生命的某个过程会去执行spring的生命周期的回调方法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//比如你在某个bean的方法上面写一个加@PostConstruct的方法（一般称bean初始化方法）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么这个方法会在spring实例化一个对象之后，填充属性之后执行这个加注解的方法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//我这里叫做spring 生命周期回调方法的生命周期，不是我胡说，有官方文档可以参考的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在执行完spring生命周期回调方法的生命周期之后才会执行代理生命周期")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在代理这个生命周期当中如果有需要会完成aop的功能")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//以上是现在主流的说法，也是一般书籍或者“某些大师”的说法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但是在循环引用的时候就不一样了，循环引用的情况下这个周期这里就完成了aop的代理")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这个周期严格意义上是在填充属性之前（填充属性也是一个生命周期阶段）")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//填充属性的周期甚至在生命周期回调方法之前，更在代理这个周期之前了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//简单来说主流说法代理的生命周期比如在第8个周期或者第八步吧")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//但是笔者这里得出的结论，如果一个bean是循环引用的则代理的周期可能在第3步就完成了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//那么为什么需要在第三步就完成呢？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//试想一下A、B两个类，现在对A类做aop处理，也就是需要对A代理")]),s._v("\n不考虑循环引用 spring 先实例化"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("，然后走生命周期确实在第"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("个周期完成的代理\n关于这个结论可以去看b站我讲的spring aop源码分析\n但是如果是循环依赖就会有问题\n比如spring 实例化"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v(" 然后发现需要注入"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("这个时候"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("还没有走到"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("步\n还没有完成代理，发觉需要注入"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("，便去创建"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("，创建"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("的时候\n发觉需要注入"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("，于是创建"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("，创建的过程中通过getSingleton\n得到了a对象，注意是对象，一个没有完成代理的对象\n然后把这个a注入给"),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("B")]),s._v("？这样做合适吗？注入的a根本没有aop功能；显然不合适\n因为b中注入的a需要是一个代理对象\n而这个时候a存在第二个map中；不是一个代理对象；\n于是我在第二个map中就不能单纯的存一个对象，需要存一个工厂\n这个工厂在特殊的时候需要对a对象做改变，比如这里说的代理（需要aop功能的情况）\n这也是三个map存在的必要性，不知道读者能不能get到点\n\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("protected")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getEarlyBeanReference")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RootBeanDefinition")]),s._v(" mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" bean"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("mbd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("isSynthetic")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasInstantiationAwareBeanPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BeanPostProcessor")]),s._v(" bp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBeanPostProcessors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bp "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("instanceof")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmartInstantiationAwareBeanPostProcessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmartInstantiationAwareBeanPostProcessor")]),s._v(" ibp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmartInstantiationAwareBeanPostProcessor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            exposedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ibp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("getEarlyBeanReference")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exposedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" beanName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" exposedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br")])]),n("p",[s._v("总结关于循环引用，如何回答面试:")]),s._v(" "),n("p",[s._v("首先spring在单例的情况下是默认支持循环引用的(当然原形也有办法，今天先不讨论)；在不做任何配置的情况下，两个bean相互依赖是能初始化成功的；spring源码中在创建bean的时候先创建这个bean的对象，创建对象完成之后通过判断容器对象的allowCircularReferences属性决定是否允许缓存这个临时对象，如果能被缓存成功则通过缓存提前暴露这个临时对象来完成循环依赖；而这个属性默认为true，所以说spring默认支持循环依赖的，但是这个属性spring提供了api让程序员来修改，所以spring也提供了关闭循环引用的功能；再就是spring完成这个临时对象的生命周期的过程中当执行到注入属性或者自动装配的周期时候会通过getSingleton方法去得到需要注入的b对象；而b对象这个时候肯定不存在故而会创建b对象创建b对象成功后继续b对象的生命周期，当执行到b对象的自动注入周期时候会要求注入a对象；调用getSingleton；从map缓存中得到a的临时对象（因为这个时候a在set集合中；这里可以展开讲），而且获取的时候也会判断是否允许循环引用，但是判断的这个值是通过参数传进来的，也就是spring内部调用的，spring源码当中写死了为true，故而如果需要扩展spring、或者对spring二次开发的的时候程序员可以自定义这个值来实现自己的功能；不管放到缓存还是从缓存中取出这个临时都需要判断；而这两次判断spring源码当中都是默认为true；这里也能再次说明spring默认是支持循环引用的；")]),s._v(" "),n("p",[s._v("然后面试中可以在说说两次调用getSingleton的意义，正在创建的那个set集合有什么用；最后在说说你在看spring循环引用的时候得出的aop实例化过程的新发现；就比较完美了.")])])}),[],!1,null,null,null);n.default=e.exports}}]);